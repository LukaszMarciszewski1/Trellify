{"version":3,"sources":["components/common/Button/styles.module.scss","components/common/TaskButton/styles.module.scss","components/TasksBoard/CardWindow/Container/styles.module.scss","components/TasksBoard/CardWindow/Labels/LabelsPopup/styles.module.scss","components/TasksBoard/CardWindow/Labels/Label/styles.module.scss","components/TasksBoard/CardWindow/Description/styles.module.scss","components/common/IconButton/styles.module.scss","components/common/Input/styles.module.scss","components/common/Loading/styles.module.scss","components/TasksBoard/CardWindow/Cover/styles.module.scss","components/TasksBoard/CardWindow/Labels/LabelsList/styles.module.scss","components/TasksBoard/CardWindow/Date/DatePopup/styles.module.scss","components/TasksBoard/CardWindow/Materials/MaterialsList/styles.module.scss","components/Storage/ProductForm/styles.module.scss","hooks/useAuth.tsx","store/api/boards.ts","store/api/lists.ts","store/api/cards.ts","store/api/files.ts","store/api/products.ts","store/store.ts","providers/AppProviders.tsx","components/Navigation/Navigation.tsx","components/common/IconButton/IconButton.tsx","hooks/useOnClickOutside.ts","components/common/Popup/Popup.tsx","components/common/Button/Button.tsx","assets/img/logo.svg","components/Header/Header.tsx","components/Layout.tsx","components/common/Input/Input.tsx","components/common/Messages/ErrorMessage.tsx","components/common/Loading/Loading.tsx","components/Auth/SignIn/SignIn.tsx","components/common/Messages/ValidateMessage.tsx","components/common/Messages/SuccessMessage.tsx","components/Auth/SignUp/SignUp.tsx","components/common/TaskButton/TaskButton.tsx","hooks/useEventListener.ts","hooks/useHover.ts","hooks/useIsFileImage.ts","components/common/Box/Box.tsx","components/common/Modal/Modal.tsx","components/TasksBoard/CardWindow/Cover/Cover.tsx","components/TasksBoard/CardWindow/Title/Title.tsx","components/TasksBoard/CardWindow/Container/Container.tsx","components/TasksBoard/CardWindow/Labels/LabelsList/LabelsList.tsx","assets/presetColors.ts","components/TasksBoard/CardWindow/Labels/LabelForm/LabelForm.tsx","components/TasksBoard/CardWindow/Labels/Label/Label.tsx","components/TasksBoard/CardWindow/Labels/LabelsPopup/LabelsPopup.tsx","components/TasksBoard/CardWindow/Date/DeadlineDate/DeadlineDate.tsx","components/TasksBoard/CardWindow/Date/DatePopup/DatePopup.tsx","components/TasksBoard/TaskForm/TaskForm.tsx","components/TasksBoard/CardWindow/Description/Description.tsx","components/TasksBoard/CardWindow/Attachments/Attachment/Attachment.tsx","components/TasksBoard/CardWindow/Attachments/AttachmentsList/AttachmentsList.tsx","components/TasksBoard/CardWindow/Attachments/AttachmentForm/AttachmentForm.tsx","components/TasksBoard/CardWindow/Attachments/AttachmentsPopup/AttachmentsPopup.tsx","components/TasksBoard/CardWindow/Materials/MaterialsList/MaterialsList.tsx","components/TasksBoard/CardWindow/Materials/MaterialsPopup/MaterialsPopup.tsx","components/TasksBoard/CardWindow/CardWindow.tsx","components/TasksBoard/Card/Card.tsx","components/TasksBoard/List/List.tsx","components/TasksBoard/TasksBoard.tsx","pages/TasksPage.tsx","components/Storage/ProductForm/ProductForm.tsx","components/Storage/Controls/Controls.tsx","components/Storage/ProductsList/ProductsList.tsx","components/Storage/Product/Product.tsx","components/Storage/CategoriesList/CategoriesList.tsx","components/Storage/Storage.tsx","pages/StoragePage.tsx","pages/CalculatorPage.tsx","pages/StatisticsPage.tsx","pages/SettingsPage.tsx","App.tsx","index.tsx","components/Navigation/styles.module.scss","components/TasksBoard/Card/styles.module.scss","components/TasksBoard/List/styles.module.scss","components/common/Messages/styles.module.scss","components/Storage/Product/styles.module.scss","components/Auth/SignIn/styles.module.scss","components/Auth/SignUp/styles.module.scss","components/TasksBoard/CardWindow/Labels/LabelForm/styles.module.scss","components/Header/styles.module.scss","components/TasksBoard/CardWindow/styles.module.scss","components/TasksBoard/CardWindow/Attachments/Attachment/styles.module.scss","components/TasksBoard/CardWindow/Materials/MaterialsPopup/styles.module.scss","components/Storage/Controls/styles.module.scss","components/styles.module.scss","components/TasksBoard/styles.module.scss","components/TasksBoard/CardWindow/Date/DeadlineDate/styles.module.scss","components/TasksBoard/CardWindow/Attachments/AttachmentForm/styles.module.scss","components/Storage/styles.module.scss","components/Storage/ProductsList/styles.module.scss","components/Storage/CategoriesList/styles.module.scss","components/common/Popup/styles.module.scss","components/common/Box/styles.module.scss","components/common/Modal/styles.module.scss","components/TasksBoard/CardWindow/Title/styles.module.scss","components/TasksBoard/TaskForm/styles.module.scss"],"names":["module","exports","AuthContext","createContext","AuthProvider","children","value","useState","user","setUser","error","setError","success","setSuccess","loading","setLoading","navigate","useNavigate","useEffect","token","localStorage","getItem","a","axios","get","process","headers","authorization","data","console","log","signIn","email","password","config","post","setItem","response","message","signUp","name","setTimeout","signOut","removeItem","useProviderAuth","Provider","useAuth","auth","useContext","Error","boardApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","set","tagTypes","refetchOnMountOrArgChange","endpoints","builder","getAllBoards","query","providesTags","getBoard","id","url","createBoard","mutation","body","method","invalidatesTags","updateBoard","_id","patch","useGetAllBoardsQuery","useGetBoardQuery","useUpdateBoardMutation","useCreateBoardMutation","listsApi","getAllLists","getList","addList","updateList","deleteList","deleteAllCardsOfList","useAddListMutation","useGetAllListsQuery","useGetListQuery","useUpdateListMutation","useDeleteListMutation","useDeleteAllCardsOfListMutation","cardsApi","getAllCards","getCard","addCard","updateCard","deleteCard","useGetAllCardsQuery","useAddCardMutation","useGetCardQuery","useDeleteCardMutation","useUpdateCardMutation","filesApi","getAllFiles","getFile","uploadFile","deleteFile","useDeleteFileMutation","useGetAllFilesQuery","useGetFileQuery","useUploadFileMutation","productsApi","getAllProducts","getProduct","addProduct","updateProduct","deleteProduct","useGetAllProductsQuery","useAddProductMutation","useGetProductQuery","useDeleteProductMutation","useUpdateProductMutation","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","AppProviders","menuItems","path","icon","Nav","location","useLocation","isSidebarOpen","setISSidebarOpen","className","styles","nav","navHidden","switchButton","switchButtonHidden","onClick","p","linksContainer","map","item","navItem","to","navLink","pathname","active","divider","IconButton","style","iconButton","type","useOnClickOutside","ref","handler","listener","event","el","current","contains","target","document","addEventListener","removeEventListener","Popup","trigger","title","isEditWindow","closePopup","backToMainWindow","props","refPopup","useRef","popup","header","popupContent","Button","disabled","button","reset","Header","popupTrigger","setPopupTrigger","signature","charAt","logoContainer","src","logoSrc","alt","userAction","userActionBtn","top","right","userInfo","userSignature","Layout","layout","navigation","Navigation","pages","Input","forwardRef","label","placeholder","defaultValue","step","minValue","maxValue","onChange","min","max","input","ErrorMessage","wrapper","Loading","size","SignIn","useForm","register","handleSubmit","errors","formState","formContainer","left","form","onSubmit","required","blueBtn","whiteBtn","ValidateMessage","validateWrapper","validate","SuccessMessage","validation","maxLength","minLength","pattern","SignUp","successResponse","watch","nameErrors","emailErrors","passwordErrors","val","confirm_password","TaskButton","taskButton","useIsomorphicLayoutEffect","window","useLayoutEffect","useEventListener","eventName","element","savedHandler","targetElement","eventListener","useHover","elementRef","setValue","isFileImage","match","Box","box","clickableArea","Modal","closeModal","refModal","overlay","modal","Cover","cover","cardCover","newWindow","open","opener","Title","cardId","boardId","cardTitle","listTitle","setCardTitle","debouncedCardTitle","useDebouncedCallback","cardTitleContainer","autoFocus","cardTitleTextarea","e","onFocus","select","rows","maxRows","Container","isDataExist","Array","isArray","length","undefined","container","items","Labels","cardLabels","setLabelsTrigger","backgroundColor","color","labelsList","presetColors","LabelForm","formId","selectColor","handleChangeTitle","handleSubmitForm","handleDeleteLabel","setSelectColor","labelForm","marginBottom","textarea","picker","colorsPalette","pickerSwatches","slice","presetColor","pickerSwatch","background","buttonsWrapper","marginRight","Label","labelId","handleCheckedLabel","openLabelEditWindow","activeLabels","filter","boxColor","LabelsPopup","boardLabels","setBoardLabels","setCardLabels","setTrigger","cards","isEditLabelPopupOpen","setIsEditLabelPopupOpen","isNewLabelPopupOpen","setIsNewLabelPopupOpen","labelTitle","setLabelTitle","currentLabel","setCurrentLabel","getChangedLabels","labels","updateAllLabels","useCallback","card","preventDefault","newLabels","newBoardLabels","newCardLabels","cardLabelsList","activeLabel","activeLabelTitle","toString","activeLabelColor","handleGetCurrentEditLabel","newLabel","existLabel","find","newStateLabels","DeadlineDate","deadline","completed","deadlineIsSoon","dateIsSameOrBefore","setDateTrigger","setCompleted","status","checked","selectedDateBtn","dayjs","format","notificationSpan","DatePopup","cardDeadline","setCardDeadline","locale","registerLocale","pl","dateFormat","timeFormat","selected","date","inline","showTimeInput","timeInputLabel","maxWidth","Date","actionsForm","TaskForm","titleBtn","onBlur","handleChange","closeForm","onKeyDown","key","code","stopPropagation","Description","cardDescription","beforeDescription","setCardDescription","isDescriptionFormOpen","setIsDescriptionFormOpen","descriptionContainer","descriptionHeader","marginLeft","height","description","Attachment","created","index","handleDeleteFile","handleDownloadFile","handleSelectCover","fileExtension","split","pop","attachment","fileImg","checkboxWrapper","width","detailsContainer","margin","AttachmentsList","files","cardFileIndex","setCardCover","setCardFileIndex","file","fileName","createdAt","fileUrl","fileType","fileId","confirm","responseType","then","res","filename","replace","fileDownload","AttachmentForm","listNames","handleInputState","handleSubmitFiles","attachmentForm","inputContainer","multiple","hidden","listContainer","nameFileSpan","AttachmentPopup","selectedFiles","setSelectedFiles","selectedNameFiles","setSelectedNameFiles","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","handleUploadFiles","from","arr","i","push","formData","FormData","append","uploadFileOptions","onUploadProgress","progressEvent","loaded","total","percent","Math","floor","catch","strokeWidth","strokeColor","MaterialsList","materials","material","used","unit","MaterialsPopup","usedProducts","selectMaterial","setSelectMaterial","materialsList","setMaterialsList","changed","setChanged","handleOnChangeUsedValue","valueAsNumber","newMaterialsList","targetIndex","findIndex","materialQuantity","product","quantity","usedBefore","updateStorage","getProductQuantityFromStorage","productQuantity","materialsFormContainer","materialsForm","htmlFor","selectContainer","alert","formGroup","restoreQuantityToStorage","Number","handleRemoveFromList","fontSize","padding","CardModal","cardDateDisplay","setCardCompleted","setIsCardWindowOpen","board","labelsTrigger","dateTrigger","attachmentsTrigger","setAttachmentsTrigger","valuationTrigger","setValuationTrigger","materialsTrigger","setMaterialsTrigger","cardWindow","cardWindowWrapper","cardWindowContent","cardWindowSidebar","AttachmentsPopup","TaskCard","setIsDragDisabled","isCardModalOpen","setIsCardModalOpen","cardCompleted","now","nowDate","setNowDate","cardFiles","setCardFiles","extend","isSameOrBefore","duration","relativeTime","hoverRef","isHover","intervalIsSameOrBefore","setInterval","clearInterval","displayCover","newFiles","filesOnlyImages","selectedCover","activeIndex","indexOf","indexOnlyImages","handleOpenCardModal","handleChangeCompleted","timeToDeadline","diff","fromNow","iconStyle","draggableId","provided","innerRef","draggableProps","dragHandleProps","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","cardDetails","labelsContainer","cardLabel","iconsContainer","dateBtn","CardWindow","List","setListTitle","isCardFormOpen","setIsCardFormOpen","isTitleFormOpen","setIsTitleFormOpen","isDragDisabled","debouncedListTitle","handleChangeListTitle","handleAddCardTitle","handleOnKeyDownListTitle","handleAddCard","listId","handleDeleteAllCardsOfList","handleDeleteList","handleSortCardsByDate","newCards","sort","b","String","list","titleWrapper","droppableId","droppableProps","cardsContainer","Card","listForm","Board","lists","isOpenForm","setIsOpenForm","setLists","formRef","onDragEnd","result","destination","source","newLists","splice","removed","sourceList","destinationList","updateState","newState","obj","o","startCards","finishCards","startState","direction","addListForm","TasksPage","isLoading","ProductForm","defaultName","defaultCategory","defaultQuantity","defaultUnit","defaultPrice","categoryList","formTitle","categorySwitch","setCategorySwitch","productForm","quantityErrors","price","priceErrors","selectGroup","category","categoryErrors","Object","entries","actionForm","categories","allCategoryValue","activeCategory","addNewProduct","handleFilterCategory","isPopupOpen","setIsPopupOpen","controls","filtersWrapper","categoryName","filterBtn","ProductsList","sortProducts","asc","dsc","order","setOrder","sortKey","setSortKey","sortData","sortBy","array","sorted","localeCompare","numeric","productsList","head","sortable","row","block","Product","editProd","deleteProd","quantityColor","CategoriesList","categoriesList","listWrapper","Storage","products","setProducts","setCategories","currentProduct","setCurrentProduct","isModalOpen","setIsModalOpen","isModalEditOpen","setIsModalEditOpen","isSuccess","setIsSuccess","setActiveCategory","getCategories","formStatus","clearTimeout","reduce","acc","storage","content","bottom","Controls","filterProducts","reverse","prod","StoragePage","Calculator","View3","Settings","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.672c7bfb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__kzQWl\",\"reset\":\"styles_reset__pbyPF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskButton\":\"styles_taskButton__37MC8\",\"icon\":\"styles_icon__19Jm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__21WZn\",\"items\":\"styles_items__lyoja\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardLabels\":\"styles_cardLabels__2eu4r\",\"cardLabelsList\":\"styles_cardLabelsList__1OEOM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"styles_label__1Tkbh\",\"boxColor\":\"styles_boxColor__nCJkl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionContainer\":\"styles_descriptionContainer__3gxsT\",\"descriptionHeader\":\"styles_descriptionHeader__106vb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconButton\":\"styles_iconButton__2Tcyu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__iJOgd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"styles_loading__1tild\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardCover\":\"styles_cardCover__1pPp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelsList\":\"styles_labelsList__2gu5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionsForm\":\"styles_actionsForm__1nFy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"materials\":\"styles_materials__qZxfy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productForm\":\"styles_productForm__blZJT\",\"formContainer\":\"styles_formContainer__3C9j6\",\"formGroup\":\"styles_formGroup__9bsMI\",\"inputContainer\":\"styles_inputContainer__qQIMg\",\"selectGroup\":\"styles_selectGroup__QrqKR\",\"select\":\"styles_select__1Kg3n\",\"actionForm\":\"styles_actionForm__LxvJg\",\"message\":\"styles_message__31VVT\"};","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { User } from 'models/user'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst AuthContext = createContext<AuthContextData | null>(null)\r\n\r\ntype AuthContextData = ReturnType<typeof useProviderAuth>\r\n\r\nexport const useProviderAuth = () => {\r\n  const [user, setUser] = useState<User | null>(null)\r\n  const [error, setError] = useState(false)\r\n  const [success, setSuccess] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token') || null;\r\n    if (token) {\r\n      (async () => {\r\n        try {\r\n          const { data } = await axios.get(`${process.env.REACT_APP_API_URL}users/me`, {\r\n            headers: {\r\n              authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          setUser(data);\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      })()\r\n    }\r\n  }, [])\r\n\r\n  const signIn = async ({ email, password }: User) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    }\r\n    setLoading(true)\r\n    try {\r\n      const { data } = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}users/login`,\r\n        {\r\n          email,\r\n          password,\r\n        },\r\n        config\r\n      )\r\n      setLoading(false)\r\n      setUser(data)\r\n      localStorage.setItem('token', data.token)\r\n    } catch (error: any) {\r\n      setLoading(false)\r\n      setError(error.response.data.message)\r\n    }\r\n  }\r\n\r\n  const signUp = async ({ name, email, password }: User) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    }\r\n    setLoading(true)\r\n    try {\r\n      await axios.post(\r\n        `${process.env.REACT_APP_API_URL}users`,\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n        },\r\n        config\r\n      )\r\n      setLoading(false)\r\n      setSuccess(true)\r\n      setTimeout(() => navigate('/logowanie'), 1000)\r\n    } catch (error: any) {\r\n      setLoading(false)\r\n      setError(error.response.data.message)\r\n    }\r\n  }\r\n\r\n  const signOut = () => {\r\n    setUser(null)\r\n    localStorage.removeItem('token')\r\n  }\r\n\r\n  return { user, loading, success, error, signIn, signUp, signOut }\r\n}\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const value = useProviderAuth()\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const auth = useContext(AuthContext)\r\n\r\n  if (!auth) {\r\n    throw new Error('useAuth needs to be used inside AuthContext')\r\n  }\r\n\r\n  return auth\r\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport { Board } from 'models/board'\r\ntype BoardResponse = Board[]\r\nconst token = localStorage.getItem('token') || null\r\n\r\nexport const boardApi = createApi({\r\n  reducerPath: 'boardApi',\r\n\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: process.env.REACT_APP_API_URL,\r\n    prepareHeaders: (headers) => {\r\n      const token = localStorage.getItem('token')\r\n      if (token) {\r\n        headers.set('authorization', `Bearer ${token}`)\r\n      }\r\n      return headers\r\n    },\r\n  }),\r\n\r\n  tagTypes: ['Board'],\r\n  refetchOnMountOrArgChange: token ? true : false,\r\n\r\n  endpoints: (builder) => ({\r\n    getAllBoards: builder.query<BoardResponse, void>({\r\n      query: () => `boards`,\r\n      providesTags: ['Board'],\r\n    }),\r\n\r\n    getBoard: builder.query<Board, string>({\r\n      query: (id) => {\r\n        return {\r\n          url: `boards/${id}`,\r\n        }\r\n      },\r\n      providesTags: ['Board'],\r\n    }),\r\n\r\n    createBoard: builder.mutation<Board, Partial<Board>>({\r\n      query: (body: {}) => ({\r\n        url: 'boards',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Board'],\r\n    }),\r\n\r\n    updateBoard: builder.mutation<Board, Partial<Board>>({\r\n      query: ({ _id, ...patch }) => ({\r\n        url: `boards/${_id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['Board'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllBoardsQuery,\r\n  useGetBoardQuery,\r\n  useCreateBoardMutation,\r\n  useUpdateBoardMutation,\r\n} = boardApi\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport { List } from 'models/list'\r\n\r\ntype ListResponse = List[]\r\n\r\nexport const listsApi = createApi({\r\n  reducerPath: 'listApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_API_URL }),\r\n  tagTypes: ['List'],\r\n  endpoints: (builder) => ({\r\n    getAllLists: builder.query<ListResponse, void>({\r\n      query: () => `lists`,\r\n      providesTags: ['List'],\r\n    }),\r\n    getList: builder.query<List, string>({\r\n      query: (id) => `lists/${id}`,\r\n      providesTags: ['List'],\r\n    }),\r\n    addList: builder.mutation<List, Partial<List>>({\r\n      query: (body: {}) => ({\r\n        url: 'lists',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    updateList: builder.mutation<List, Partial<List>>({\r\n      query: ({ _id, ...patch }) => ({\r\n        url: `lists/${_id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    deleteList: builder.mutation<{ success: boolean; id: string | number }, string>({\r\n      query: (id) => ({\r\n        url: `lists/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    deleteAllCardsOfList: builder.mutation<List, Partial<List>>({\r\n      query: ({ _id, ...patch }) => ({\r\n        url: `lists/${_id}/cards`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllListsQuery,\r\n  useGetListQuery,\r\n  useAddListMutation,\r\n  useUpdateListMutation,\r\n  useDeleteListMutation,\r\n  useDeleteAllCardsOfListMutation,\r\n} = listsApi\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport { Card } from 'models/card'\r\n\r\ntype CardsResponse = Card[]\r\n\r\nexport const cardsApi = createApi({\r\n  reducerPath: 'cardsApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_API_URL }),\r\n  tagTypes: ['Cards'],\r\n  endpoints: (builder) => ({\r\n    getAllCards: builder.query<CardsResponse, void>({\r\n      query: () => `cards`,\r\n      providesTags: ['Cards'],\r\n    }),\r\n    getCard: builder.query<Card, string>({\r\n      query: (id) => `cards/${id}`,\r\n      providesTags: ['Cards'],\r\n    }),\r\n    addCard: builder.mutation<Card, Partial<Card>>({\r\n      query: (body: {}) => ({\r\n        url: 'cards',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    updateCard: builder.mutation<Card, Partial<Card>>({\r\n      query: ({ _id, ...patch }) => ({\r\n        url: `cards/${_id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    deleteCard: builder.mutation<{ success: boolean; id: string }, string>({\r\n      query: (id) => ({\r\n        url: `cards/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllCardsQuery,\r\n  useGetCardQuery,\r\n  useAddCardMutation,\r\n  useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n} = cardsApi\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport { File } from 'models/file'\r\n\r\ntype FilesResponse = File[]\r\n\r\nexport const filesApi = createApi({\r\n  reducerPath: 'filesApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_API_URL }),\r\n  tagTypes: ['Files'],\r\n  endpoints: (builder) => ({\r\n    getAllFiles: builder.query<FilesResponse, void>({\r\n      query: () => `files`,\r\n      providesTags: ['Files'],\r\n    }),\r\n    getFile: builder.query<File, string>({\r\n      query: (id) => `files/${id}`,\r\n      providesTags: ['Files'],\r\n    }),\r\n    uploadFile: builder.mutation<FilesResponse, Partial<File>>({\r\n      query: (body: {}) => ({\r\n        url: `files`,\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Files'],\r\n    }),\r\n    deleteFile: builder.mutation<{ success: boolean; id: string | number },string>({\r\n      query: (id) => ({\r\n        url: `files/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Files'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllFilesQuery,\r\n  useGetFileQuery,\r\n  useUploadFileMutation,\r\n  useDeleteFileMutation,\r\n} = filesApi\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport { Product } from 'models/product'\r\n\r\ntype ProductResponse = Product[]\r\nconst token = localStorage.getItem('token') || null\r\nexport const productsApi = createApi({\r\n  reducerPath: 'productsApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: process.env.REACT_APP_API_URL,\r\n    prepareHeaders: (headers) => {\r\n      const token = localStorage.getItem('token') || null\r\n      if (token) {\r\n        headers.set('authorization', `Bearer ${token}`)\r\n      }\r\n      return headers\r\n    },\r\n  }),\r\n  refetchOnMountOrArgChange: token ? true : false,\r\n  tagTypes: ['Products'],\r\n  endpoints: (builder) => ({\r\n    getAllProducts: builder.query<ProductResponse, void>({\r\n      query: () => `products`,\r\n      providesTags: ['Products'],\r\n    }),\r\n    getProduct: builder.query<Product, string>({\r\n      query: (id) => `products/${id}`,\r\n      providesTags: ['Products'],\r\n    }),\r\n    addProduct: builder.mutation<Product, Partial<Product>>({\r\n      query: (body: {}) => ({\r\n        url: 'products',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Products'],\r\n    }),\r\n    updateProduct: builder.mutation<Product, Partial<Product>>({\r\n      query: ({ _id, ...patch }) => ({\r\n        url: `products/${_id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['Products'],\r\n    }),\r\n    deleteProduct: builder.mutation<{ success: boolean; id: string }, string>({\r\n      query: (id) => ({\r\n        url: `products/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Products'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllProductsQuery,\r\n  useGetProductQuery,\r\n  useAddProductMutation,\r\n  useDeleteProductMutation,\r\n  useUpdateProductMutation,\r\n} = productsApi\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { boardApi } from './api/boards'\r\nimport { listsApi } from './api/lists'\r\nimport { cardsApi } from './api/cards'\r\nimport { filesApi } from './api/files'\r\nimport { productsApi } from './api/products'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [boardApi.reducerPath]: boardApi.reducer,\r\n    [listsApi.reducerPath]: listsApi.reducer,\r\n    [cardsApi.reducerPath]: cardsApi.reducer,\r\n    [filesApi.reducerPath]: filesApi.reducer,\r\n    [productsApi.reducerPath]: productsApi.reducer\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(\r\n      boardApi.middleware,\r\n      listsApi.middleware,\r\n      cardsApi.middleware,\r\n      filesApi.middleware,\r\n      productsApi.middleware\r\n    ),\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { AuthProvider } from 'hooks/useAuth';\r\nimport { store } from 'store/store';\r\n\r\nconst AppProviders: React.FC = ({ children }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <AuthProvider>\r\n          {children}\r\n        </AuthProvider>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default AppProviders","import React, { useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport styles from './styles.module.scss'\r\nimport { MdArrowForwardIos } from \"react-icons/md\";\r\nimport { CgCalculator } from \"react-icons/cg\";\r\nimport { GiDeliveryDrone } from \"react-icons/gi\";\r\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\r\nimport { GrTask } from \"react-icons/gr\";\r\nimport { BiCategory } from 'react-icons/bi'\r\n\r\nconst menuItems = [\r\n  {\r\n    name: 'Zadania',\r\n    path: '/zadania',\r\n    icon: <GrTask />\r\n  },\r\n  {\r\n    name: 'Magazyn',\r\n    path: '/magazyn',\r\n    icon: <BiCategory />\r\n  },\r\n  {\r\n    name: 'Kalkulator',\r\n    path: '/kalkulator',\r\n    icon: <CgCalculator />\r\n  },\r\n  {\r\n    name: 'Statystyki',\r\n    path: '/statystyki',\r\n    icon: <GiDeliveryDrone />\r\n  },\r\n  {\r\n    name: 'Ustawienia',\r\n    path: '/ustawienia',\r\n    icon: <AiOutlineInfoCircle />\r\n  },\r\n]\r\n\r\nconst Nav: React.FC = () => {\r\n  const location = useLocation()\r\n  const [isSidebarOpen, setISSidebarOpen] = useState(true)\r\n\r\n  return (\r\n    <nav className={`${styles.nav} ${isSidebarOpen ? styles.navHidden : styles.nav}`}>\r\n      <button\r\n        className={`${styles.switchButton} ${isSidebarOpen ? styles.switchButton : styles.switchButtonHidden}`}\r\n        onClick={() => setISSidebarOpen((p) => !p)}>\r\n        <MdArrowForwardIos />\r\n      </button>\r\n      <ul className={styles.linksContainer}>\r\n        {menuItems.map((item) => (\r\n          <li key={item.name}\r\n            className={styles.navItem}\r\n          >\r\n            <Link\r\n              to={item.path}\r\n            >\r\n              <div className={`${styles.navLink} ${location.pathname === item.path ? styles.active : styles.navLink}`}>\r\n                <div className={styles.icon}>{item.icon}</div>\r\n                <span>{!isSidebarOpen ? item.name : null}</span>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div className={styles.divider} />\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface IconButtonProps {\r\n  onClick?: () => void\r\n  style?: {}\r\n  children: JSX.Element\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = ({ style, onClick, children }) => (\r\n  <button\r\n    className={styles.iconButton}\r\n    onClick={onClick}\r\n    type='button'\r\n    style={style}\r\n  >\r\n    {children}\r\n  </button>\r\n)\r\n\r\nexport default IconButton\r\n","import { RefObject, useEffect } from 'react'\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent\r\n\r\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void,\r\n): void {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current\r\n\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return\r\n      }\r\n\r\n      handler(event)\r\n    }\r\n\r\n    document.addEventListener(`mousedown`, listener)\r\n    document.addEventListener(`touchstart`, listener)\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener)\r\n      document.removeEventListener(`touchstart`, listener)\r\n    }\r\n\r\n  }, [ref, handler])\r\n}\r\n\r\nexport default useOnClickOutside","import React, { useRef } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport IconButton from '../IconButton/IconButton'\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport { MdOutlineArrowBackIos } from \"react-icons/md\";\r\nimport useOnClickOutside from 'hooks/useOnClickOutside'\r\n\r\ninterface PopupPosition {\r\n  right?: string,\r\n  top?: string\r\n}\r\n\r\ninterface PopupProps extends PopupPosition {\r\n  trigger: boolean\r\n  title: string\r\n  isEditWindow?: boolean\r\n  closePopup: () => void\r\n  backToMainWindow?: () => void\r\n}\r\nconst Popup: React.FC<PopupProps> = ({\r\n  children,\r\n  trigger,\r\n  title,\r\n  isEditWindow,\r\n  closePopup,\r\n  backToMainWindow,\r\n  ...props\r\n}) => {\r\n  const refPopup = useRef(null)\r\n  useOnClickOutside(refPopup, closePopup)\r\n\r\n  return (\r\n    trigger ? (\r\n      <div\r\n        className={styles.popup}\r\n        ref={refPopup}\r\n        style={{ ...props }}>\r\n        <div className={styles.header}>\r\n          {isEditWindow ? (\r\n            <IconButton onClick={backToMainWindow}><MdOutlineArrowBackIos /></IconButton>\r\n          ) : null\r\n          }\r\n          <h4>{title}</h4>\r\n          <IconButton onClick={closePopup}><BsXLg /></IconButton>\r\n        </div>\r\n        <div className={styles.popupContent}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    ) : null\r\n  )\r\n}\r\n\r\nexport default Popup","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface ButtonProps {\r\n  title: string\r\n  onClick?: (e: any) => void\r\n  style?: {}\r\n  icon?: Element\r\n  type: \"button\" | \"submit\" | \"reset\" | undefined\r\n  disabled?: boolean\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n  title,\r\n  style,\r\n  disabled,\r\n  type,\r\n  onClick,\r\n}) => (\r\n  <button\r\n    className={`${styles.button} ${type === \"reset\" && styles.reset}`}\r\n    style={style}\r\n    onClick={onClick}\r\n    disabled={disabled}\r\n  >\r\n    {title}\r\n  </button>\r\n)\r\n\r\nexport default Button\r\n","export default __webpack_public_path__ + \"static/media/logo.7eca49e8.svg\";","import React, { useState } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { useAuth } from 'hooks/useAuth'\r\nimport Popup from 'components/common/Popup/Popup'\r\nimport Button from 'components/common/Button/Button'\r\nimport logoSrc from 'assets/img/logo.svg'\r\n\r\nconst Header: React.FC = () => {\r\n  const { user, signOut } = useAuth()\r\n  const [popupTrigger, setPopupTrigger] = useState(false)\r\n  const signature = user ? user.name.charAt(0) : ''\r\n\r\n  return (\r\n    <div className={styles.header}>\r\n      <div className={styles.logoContainer}>\r\n        <img src={logoSrc} alt='logo' />\r\n      </div>\r\n      <div className={styles.userAction}>\r\n        <button onClick={() => setPopupTrigger(true)} className={styles.userActionBtn}>\r\n          <h3>{signature}</h3>\r\n        </button>\r\n        <Popup\r\n          title={'Konto'}\r\n          trigger={popupTrigger}\r\n          closePopup={() => {\r\n            setPopupTrigger(false)\r\n          }}\r\n          top={'55px'}\r\n          right={'5px'}\r\n        >\r\n          <div className={styles.userInfo}>\r\n            <div className={styles.userSignature}><h3>{signature}</h3></div>\r\n            <div>\r\n              <p>{user?.name}</p>\r\n              <span>{user?.email}</span>\r\n            </div>\r\n          </div>\r\n          <Button\r\n            title={'Wyloguj'}\r\n            onClick={signOut}\r\n            type={'button'}\r\n          />\r\n        </Popup>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { Outlet } from 'react-router-dom';\r\nimport Navigation from './Navigation/Navigation'\r\nimport Header from './Header/Header'\r\n\r\nconst Layout: React.FC = () => {\r\n  return (\r\n    <div className={styles.layout}>\r\n      <div className={styles.header}>\r\n        <Header />\r\n      </div>\r\n      <div className={styles.navigation}>\r\n        <Navigation />\r\n      </div>\r\n      <div className={styles.pages}>\r\n        <Outlet />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React, { forwardRef } from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\nexport type InputProps = {\r\n  id: string;\r\n  name: string;\r\n  label: string;\r\n  type?: 'text' | 'email' | 'number' | 'password';\r\n  placeholder?: string\r\n  disabled?: boolean\r\n  onChange?: (value: any) => void\r\n  error?: {} | undefined | ((value: any) => void)\r\n  value?: number | string\r\n  step?: string\r\n  minValue?: number\r\n  maxValue?: number\r\n  defaultValue?: string | number\r\n}\r\n\r\nconst Input: React.FC<InputProps> = forwardRef<HTMLInputElement, InputProps>(\r\n  (\r\n    {\r\n      id,\r\n      name,\r\n      label,\r\n      type,\r\n      placeholder,\r\n      disabled,\r\n      value,\r\n      defaultValue,\r\n      step,\r\n      minValue,\r\n      maxValue,\r\n      onChange,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <input\r\n        id={id}\r\n        ref={ref}\r\n        name={name}\r\n        type={type}\r\n        value={value}\r\n        defaultValue={defaultValue}\r\n        aria-label={label}\r\n        placeholder={placeholder}\r\n        step={step}\r\n        min={minValue}\r\n        max={maxValue}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n        className={styles.input}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\n\r\nexport default Input","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { BiErrorCircle } from 'react-icons/bi'\r\n\r\ninterface ErrorMessageProps {\r\n  message: string\r\n}\r\n\r\nconst ErrorMessage: React.FC<ErrorMessageProps> = ({ message }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <span className={styles.error}><BiErrorCircle /> {message}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage","import MoonLoader from \"react-spinners/MoonLoader\";\r\nimport styles from './styles.module.scss'\r\nconst Loading = () => {\r\n  return (\r\n  <div className={styles.loading}>\r\n     <MoonLoader size={40}/>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Loading","import { Link } from 'react-router-dom';\r\nimport styles from './styles.module.scss'\r\nimport { User } from 'models/user'\r\nimport { useAuth } from 'hooks/useAuth'\r\nimport { useForm } from 'react-hook-form';\r\nimport Input from 'components/common/Input/Input'\r\nimport ErrorMessage from 'components/common/Messages/ErrorMessage';\r\nimport Loading from 'components/common/Loading/Loading'\r\n\r\nconst SignIn: React.FC = () => {\r\n  const { loading, signIn } = useAuth()\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<User>();\r\n\r\n  return (\r\n    <div className={styles.auth}>\r\n      <div className={styles.formContainer}>\r\n        <div className={styles.left}>\r\n          {loading ? <Loading /> : null}\r\n          <form className={styles.form} onSubmit={handleSubmit(signIn)}>\r\n            <h1>Zaloguj się</h1>\r\n            <Input\r\n              id={'email'}\r\n              placeholder={'email'}\r\n              label={'Email'}\r\n              type=\"text\"\r\n              {...register(\"email\", { required: true })}\r\n            />\r\n            {errors.email && <ErrorMessage message={'Email jest wymagany'} />}\r\n            <Input\r\n              id={'password'}\r\n              placeholder={'password'}\r\n              label={'Password'}\r\n              type=\"password\"\r\n              {...register(\"password\", { required: true })}\r\n            />\r\n            {errors.password && <ErrorMessage message={'Hasło jest wymagane'} />}\r\n            <button type='submit' className={styles.blueBtn}>\r\n              Logowanie\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className={styles.right}>\r\n          <h1>Zarejestruj się</h1> <br />\r\n          <Link to='/rejestracja'>\r\n            <button type='button' className={styles.whiteBtn}>\r\n              Rejestracja\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface ValidateMessageProps {\r\n  message: string\r\n}\r\n\r\nconst ValidateMessage: React.FC<ValidateMessageProps> = ({ message }) => {\r\n  return (\r\n    <div className={styles.validateWrapper}>\r\n      <span className={styles.validate}>{message}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ValidateMessage","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { GiCheckMark } from 'react-icons/gi'\r\n\r\ninterface SuccessMessageProps {\r\n  message: string\r\n}\r\n\r\nconst SuccessMessage: React.FC<SuccessMessageProps> = ({ message }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <span className={styles.success}><GiCheckMark /> {message}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SuccessMessage","import { Link } from 'react-router-dom'\r\nimport styles from './styles.module.scss'\r\nimport { useAuth } from 'hooks/useAuth'\r\nimport { useForm } from 'react-hook-form';\r\nimport { User } from 'models/user'\r\nimport Loading from 'components/common/Loading/Loading'\r\nimport Input from 'components/common/Input/Input'\r\nimport ErrorMessage from 'components/common/Messages/ValidateMessage';\r\nimport SuccessMessage from 'components/common/Messages/SuccessMessage'\r\n\r\nconst validation = {\r\n  name: {\r\n    required: true,\r\n    maxLength: 20,\r\n    minLength: 2,\r\n  },\r\n  email: {\r\n    required: true,\r\n    pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  },\r\n  password: {\r\n    required: true,\r\n    pattern: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/\r\n  }\r\n}\r\n\r\nconst SignUp: React.FC = () => {\r\n  const { loading, success: successResponse, signUp } = useAuth()\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm<User>();\r\n\r\n  const nameErrors = (type: any) => {\r\n    switch (type) {\r\n      case 'required':\r\n        return <ErrorMessage message={'Imię jest wymagane'} />\r\n      case 'minLength':\r\n        return <ErrorMessage message={'Imię musi zawierać conajmiej 2 znaki'} />\r\n      case 'maxLength':\r\n        return <ErrorMessage message={'Imię może zawierać maksymalnie 20 znaków'} />\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  const emailErrors = (type: any) => {\r\n    switch (type) {\r\n      case 'required':\r\n        return <ErrorMessage message={'Email jest wymagany'} />\r\n      case 'pattern':\r\n        return <ErrorMessage message={'Email jest niepoprawny'} />\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  const passwordErrors = (type: any) => {\r\n    switch (type) {\r\n      case 'required':\r\n        return <ErrorMessage message={'Hasło jest wymagane'} />\r\n      case 'pattern':\r\n        return <ErrorMessage message={'Hasło musi zawierać: co najmniej 8 znaków, 1 cyfrę, 1 małą literę i 1 wielką literę'} />\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.auth}>\r\n      <div className={styles.formContainer}>\r\n        <div className={styles.left}>\r\n          <h1>Zaloguj się</h1><br />\r\n          <Link to='/logowanie'>\r\n            <button type='button' className={styles.whiteBtn}>\r\n              Logowanie\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className={styles.right}>\r\n          {loading ? <Loading /> : null}\r\n          {successResponse && <SuccessMessage message={'Zostałeś zarejestrowany'} />}\r\n          <form className={styles.form} onSubmit={handleSubmit(signUp)}>\r\n            <h1>Utwórz konto</h1>\r\n            <Input\r\n              id={'name'}\r\n              placeholder={'Imię'}\r\n              label={'Imię'}\r\n              type=\"text\"\r\n              error={errors.name}\r\n              {...register(\"name\", { ...validation.name })}\r\n            />\r\n            {nameErrors(errors.name?.type)}\r\n            <Input\r\n              id={'email'}\r\n              placeholder={'email'}\r\n              label={'Email'}\r\n              type=\"text\"\r\n              {...register(\"email\", { ...validation.email })}\r\n            />\r\n            {emailErrors(errors.email?.type)}\r\n            <Input\r\n              id={'password'}\r\n              placeholder={'password'}\r\n              label={'Password'}\r\n              type=\"password\"\r\n              {...register(\"password\", { ...validation.password })}\r\n            />\r\n            {passwordErrors(errors.password?.type)}\r\n            <Input\r\n              id={'confirm_password'}\r\n              placeholder={'confirm password'}\r\n              label={'Confirm Password'}\r\n              type=\"password\"\r\n              {...register(\"confirm_password\", {\r\n                required: true, validate: (val: string) => val === watch('password')\r\n              })}\r\n            />\r\n            {errors.confirm_password && <ErrorMessage message={'Wpisz poprawne hasło'} />}\r\n            <button type='submit' className={styles.blueBtn}>\r\n              Rejestracja\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface TaskButtonProps {\r\n  name: string\r\n  onClick: () => void\r\n  icon?: {}\r\n  style?: {}\r\n}\r\n\r\nconst TaskButton: React.FC<TaskButtonProps> = ({ onClick, name, icon, style }) => {\r\n  return (\r\n    <button className={styles.taskButton} onClick={onClick} style={style}>\r\n      <div className={styles.icon}>{icon}</div>\r\n      <span>{name}</span>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default TaskButton\r\n","import { RefObject, useRef, useEffect, useLayoutEffect } from 'react'\r\n\r\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\r\n\r\nfunction useEventListener<K extends keyof WindowEventMap>(\r\n  eventName: K,\r\n  handler: (event: WindowEventMap[K]) => void,\r\n): void\r\nfunction useEventListener<\r\n  K extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement = HTMLDivElement,\r\n>(\r\n  eventName: K,\r\n  handler: (event: HTMLElementEventMap[K]) => void,\r\n  element: RefObject<T>,\r\n): void\r\n\r\nfunction useEventListener<\r\n  KW extends keyof WindowEventMap,\r\n  KH extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement | void = void,\r\n>(\r\n  eventName: KW | KH,\r\n  handler: (\r\n    event: WindowEventMap[KW] | HTMLElementEventMap[KH] | Event,\r\n  ) => void,\r\n  element?: RefObject<T>,\r\n) {\r\n  // Create a ref that stores handler\r\n  const savedHandler = useRef(handler)\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    savedHandler.current = handler\r\n  }, [handler])\r\n\r\n  useEffect(() => {\r\n    // Define the listening target\r\n    const targetElement: T | Window = element?.current || window\r\n    if (!(targetElement && targetElement.addEventListener)) {\r\n      return\r\n    }\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener: typeof handler = event => savedHandler.current(event)\r\n\r\n    targetElement.addEventListener(eventName, eventListener)\r\n\r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      targetElement.removeEventListener(eventName, eventListener)\r\n    }\r\n  }, [eventName, element])\r\n}\r\n\r\nexport default useEventListener","import { RefObject, useState } from 'react'\r\n\r\nimport useEventListener from './useEventListener'\r\n\r\nfunction useHover<T extends HTMLElement = HTMLElement>(\r\n  elementRef: RefObject<T>,\r\n): boolean {\r\n  const [value, setValue] = useState<boolean>(false)\r\n\r\n  const handleMouseEnter = () => setValue(true)\r\n  const handleMouseLeave = () => setValue(false)\r\n\r\n  useEventListener('mouseenter', handleMouseEnter, elementRef)\r\n  useEventListener('mouseleave', handleMouseLeave, elementRef)\r\n\r\n  return value\r\n}\r\n\r\nexport default useHover\r\n","/* eslint-disable no-useless-escape */\r\nexport const isFileImage = (url: string) => {\r\n  if (typeof url !== 'string') {\r\n    return false\r\n  }\r\n  return (\r\n    url.match(/^http[^\\?]*.(jpg|jpeg|gif|png|tiff|bmp|webp)(\\?(.*))?$/gim) !==\r\n    null\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface CardProps {\r\n  onClick?: () => void\r\n}\r\n\r\nconst Box: React.FC<CardProps> = ({ onClick, children }) => {\r\n  return (\r\n    <div className={styles.box}>\r\n      <div className={styles.wrapper} >\r\n        <div className={styles.clickableArea} onClick={onClick}></div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Box","import React, { useRef } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport IconButton from '../IconButton/IconButton'\r\nimport useOnClickOutside from 'hooks/useOnClickOutside'\r\nimport { BsXLg } from \"react-icons/bs\";\r\n\r\ntype ModalProps = {\r\n  trigger: boolean\r\n  closeModal: () => void\r\n  children: JSX.Element | JSX.Element[];\r\n}\r\n\r\nconst Modal: React.FC<ModalProps> = ({ children, trigger, closeModal }) => {\r\n  const refModal = useRef(null)\r\n  useOnClickOutside(refModal, closeModal)\r\n\r\n  return (\r\n    trigger ? (\r\n      <div className={styles.overlay}>\r\n        <div className={styles.modal} ref={refModal}>\r\n          <div className={styles.header}>\r\n            <IconButton onClick={closeModal}><BsXLg /></IconButton>\r\n          </div>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    ) : null\r\n  )\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { isFileImage } from 'hooks/useIsFileImage'\r\n\r\ninterface CoverProps {\r\n  cover: string\r\n}\r\n\r\nconst Cover: React.FC<CoverProps> = ({ cover }) => {\r\n  const onClickHandler = () => {\r\n    const newWindow = window.open(`${cover}`, \"_blank\", 'noopener,noreferrer');\r\n    if (newWindow) newWindow.opener = null\r\n  }\r\n  return (\r\n    <>\r\n      {\r\n        cover && isFileImage(cover) ? (\r\n          <div className={styles.cardCover} >\r\n            <img onClick={onClickHandler} src={cover} alt={cover} />\r\n          </div>\r\n        ) : null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cover","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { useDebouncedCallback } from 'use-debounce';\r\nimport TextareaAutosize from 'react-textarea-autosize'\r\nimport { useUpdateBoardMutation } from 'store/api/boards'\r\nimport { useUpdateCardMutation } from \"store/api/cards\"\r\n\r\ninterface TitleProps {\r\n  cardId: string\r\n  boardId: string\r\n  cardTitle: string\r\n  listTitle: string\r\n  setCardTitle: (value: string) => void\r\n}\r\n\r\nconst Title: React.FC<TitleProps> = ({\r\n  cardId,\r\n  boardId,\r\n  cardTitle,\r\n  listTitle,\r\n  setCardTitle\r\n}) => {\r\n  const [updateCard] = useUpdateCardMutation();\r\n  const [updateBoard] = useUpdateBoardMutation();\r\n\r\n  const debouncedCardTitle = useDebouncedCallback(\r\n    (value) => {\r\n      updateCard({\r\n        _id: cardId,\r\n        title: value\r\n      })\r\n      updateBoard({ _id: boardId })\r\n    },\r\n    300\r\n  )\r\n\r\n  const handleEditCardTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card-title') {\r\n      setCardTitle(e.target.value)\r\n      debouncedCardTitle(e.target.value)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.cardTitle}>\r\n      <div className={styles.cardTitleContainer}>\r\n        <TextareaAutosize\r\n          id='card-title'\r\n          autoFocus={false}\r\n          value={cardTitle}\r\n          className={styles.cardTitleTextarea}\r\n          onChange={handleEditCardTitle}\r\n          onFocus={(e) => e.target.select()}\r\n          rows={20}\r\n          maxRows={4}\r\n          required\r\n        />\r\n        <p>Na liscie: <strong>{listTitle}</strong></p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Title","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ntype ContainerProps = {\r\n  data: any\r\n  children: JSX.Element | JSX.Element[];\r\n  title: string\r\n}\r\n\r\nconst Container: React.FC<ContainerProps> = ({ children, title, data }) => {\r\n  const isDataExist = Array.isArray(data) ? (\r\n    data.length ? true : false) : (\r\n    data === null || data === undefined ? false : true)\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isDataExist ? (\r\n          <div className={styles.container}>\r\n            <h4>{title}</h4>\r\n            <div className={styles.items}>\r\n              {children}\r\n            </div>\r\n          </div>\r\n        ) : null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Container","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { Labels as LabelModel } from 'models/labels'\r\nimport Container from '../../Container/Container'\r\n\r\n\r\ninterface LabelsProps {\r\n  cardLabels: LabelModel[]\r\n  setLabelsTrigger: (value: boolean) => void\r\n}\r\n\r\nconst Labels: React.FC<LabelsProps> = ({ cardLabels, setLabelsTrigger }) => {\r\n  return (\r\n    <Container data={cardLabels} title={'Etykiety'}>\r\n      {\r\n        cardLabels.map((label: { title: string; active: boolean; color: string; _id: string }) => (\r\n          <div\r\n            key={label._id}\r\n            style={{ backgroundColor: `${label.color}` }}\r\n            className={styles.labelsList}\r\n            onClick={() => setLabelsTrigger(true)}\r\n          >\r\n            <span>{label.title}</span>\r\n          </div>\r\n        ))\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Labels","export const presetColors = [\r\n  '#FB8B24',\r\n  '#9575cd',\r\n  '#F36935',\r\n  '#EA4746',\r\n  '#AE0366',\r\n  '#53416B',\r\n  '#ba68c8',\r\n  '#2F8278',\r\n  '#C5D86D',\r\n  '#30B68E',\r\n  '#0d6192',\r\n  '#A2D2FF',\r\n  '#3f3c3c',\r\n  '#FFDAB9',\r\n]","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { HexColorPicker } from \"react-colorful\";\r\nimport { presetColors } from 'assets/presetColors'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport Button from 'components/common/Button/Button'\r\n\r\ninterface LabelProps {\r\n  formId: string\r\n  value: string\r\n  selectColor: string\r\n  handleSubmitForm: (value: any) => void\r\n  handleChangeTitle: (value: any) => void\r\n  onFocus?: (value: any) => void\r\n  handleDeleteLabel: () => void\r\n  setSelectColor: (value: any) => void\r\n}\r\n\r\nconst LabelForm: React.FC<LabelProps> = ({\r\n  formId,\r\n  selectColor,\r\n  value,\r\n  handleChangeTitle,\r\n  handleSubmitForm,\r\n  handleDeleteLabel,\r\n  onFocus,\r\n  setSelectColor,\r\n}) => {\r\n\r\n  const placeholder = 'Dodaj nazwę etykiety...'\r\n\r\n  return (\r\n    <form className={styles.labelForm}>\r\n      <p style={{ marginBottom: '5px' }}>Nazwa</p>\r\n      <TextareaAutosize\r\n        id={formId}\r\n        maxRows={20}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        className={styles.textarea}\r\n        autoFocus\r\n        onChange={handleChangeTitle}\r\n        onFocus={onFocus}\r\n      />\r\n      <p style={{ marginBottom: '5px' }}>Wybierz kolor</p>\r\n      <div className={styles.picker}>\r\n        <HexColorPicker\r\n          className={styles.colorsPalette}\r\n          color={selectColor}\r\n          onChange={(e) => setSelectColor((label: any) => { return { ...label, color: e } })}\r\n        />\r\n        <div className={styles.pickerSwatches}>\r\n          {presetColors.slice(0, 14).map((presetColor) => (\r\n            <div\r\n              key={presetColor}\r\n              className={styles.pickerSwatch}\r\n              style={{ background: presetColor }}\r\n              onClick={() => setSelectColor((label: any) => { return { ...label, color: presetColor } })}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className={styles.buttonsWrapper}>\r\n        <Button onClick={handleSubmitForm} title={'Zapisz'} type={'submit'} style={{ marginRight: '16px' }} />\r\n        <Button onClick={handleDeleteLabel} title={'Usuń'} type={'reset'} />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LabelForm","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { Labels as LabelModel } from 'models/labels'\r\nimport { BiCheck } from 'react-icons/bi'\r\nimport { BsPencil } from 'react-icons/bs'\r\nimport IconButton from 'components/common/IconButton/IconButton'\r\n\r\ninterface LabelProps {\r\n  labelId: string\r\n  title: string\r\n  color: string\r\n  cardLabels: LabelModel[]\r\n  handleCheckedLabel: () => void\r\n  openLabelEditWindow: () => void\r\n}\r\n\r\nconst Label: React.FC<LabelProps> = ({\r\n  labelId,\r\n  title,\r\n  color,\r\n  cardLabels,\r\n  handleCheckedLabel,\r\n  openLabelEditWindow,\r\n}) => {\r\n\r\n  const activeLabels = cardLabels.filter((label: { _id: string }) => label._id === labelId)\r\n  return (\r\n    <div className={styles.label}>\r\n      <div\r\n        onClick={handleCheckedLabel}\r\n        style={{ background: `${color}` }}\r\n        className={styles.boxColor}>\r\n        <p>{title}</p>\r\n        {activeLabels.length ? < BiCheck style={{ color: 'white' }} /> : null}\r\n      </div>\r\n      <IconButton onClick={openLabelEditWindow}><BsPencil /></IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Label","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable array-callback-return */\r\nimport React, { useState, useEffect, useCallback } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { Labels as LabelModel } from 'models/labels'\r\nimport Popup from 'components/common/Popup/Popup'\r\nimport LabelForm from '../LabelForm/LabelForm'\r\nimport TaskButton from 'components/common/TaskButton/TaskButton'\r\nimport Label from '../Label/Label'\r\n\r\nimport {\r\n  useUpdateBoardMutation,\r\n\r\n} from 'store/api/boards'\r\nimport {\r\n  useGetAllCardsQuery,\r\n  useUpdateCardMutation,\r\n} from \"store/api/cards\"\r\n\r\ninterface LabelsPopupProps {\r\n  boardLabels: any\r\n  cardLabels: LabelModel[]\r\n  setBoardLabels: (data: LabelModel[]) => void\r\n  setCardLabels: (data: LabelModel[]) => void\r\n  trigger: boolean\r\n  setTrigger: (value: boolean) => void\r\n  boardId: string\r\n  cardId: string\r\n}\r\n\r\nconst LabelsPopup: React.FC<LabelsPopupProps> = ({\r\n  boardId,\r\n  cardId,\r\n  boardLabels,\r\n  cardLabels,\r\n  setBoardLabels,\r\n  setCardLabels,\r\n  trigger,\r\n  setTrigger\r\n}) => {\r\n\r\n  const { data: cards } = useGetAllCardsQuery()\r\n  const [updateCard] = useUpdateCardMutation();\r\n  const [updateBoard] = useUpdateBoardMutation();\r\n\r\n  const [isEditLabelPopupOpen, setIsEditLabelPopupOpen] = useState(false)\r\n  const [isNewLabelPopupOpen, setIsNewLabelPopupOpen] = useState(false)\r\n\r\n  const [labelTitle, setLabelTitle] = useState('')\r\n  const [currentLabel, setCurrentLabel] = useState({ _id: '', color: '', title: '' })\r\n\r\n  useEffect(() => {\r\n    if (!trigger) {\r\n      setIsEditLabelPopupOpen(false)\r\n      setIsNewLabelPopupOpen(false)\r\n    }\r\n  }, [trigger])\r\n\r\n  const handleAddNewLabel = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    const newLabels = [...boardLabels, { color: currentLabel.color, title: labelTitle, active: false }]\r\n    updateBoard({\r\n      _id: boardId,\r\n      labels: newLabels\r\n    })\r\n    setIsNewLabelPopupOpen(false)\r\n  }\r\n\r\n  const handleChangeLabelTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'label-title-edit') setCurrentLabel(label => { return { ...label, title: e.target.value } })\r\n    if (e.target.id === 'label-title-add') setLabelTitle(e.target.value)\r\n  }\r\n\r\n  const handleGetCurrentEditLabel = (id: string) => {\r\n    const newLabels = [...boardLabels]\r\n    const activeLabel = newLabels.filter((label: { _id: string }) => label._id === id)\r\n    const activeLabelTitle = activeLabel.map((label: { title: string }) => label.title).toString()\r\n    const activeLabelColor = activeLabel.map((label: { color: string }) => label.color).toString()\r\n    setCurrentLabel(label => { return { ...label, _id: id, title: activeLabelTitle, color: activeLabelColor } })\r\n  }\r\n\r\n  const getChangedLabels = (labels: LabelModel[]) => {\r\n    return labels.map((label) => {\r\n      if (label._id !== currentLabel._id) return label;\r\n      return { ...label, title: currentLabel.title, color: currentLabel.color };\r\n    });\r\n  }\r\n\r\n  const updateAllLabels = useCallback(() => {\r\n    cards?.filter(card => card.boardId === boardId).map(card => {\r\n      updateCard({\r\n        _id: card._id,\r\n        labels: getChangedLabels(card.labels)\r\n      })\r\n    })\r\n  }, [currentLabel.color, currentLabel.title])\r\n\r\n  const handleSaveLabelEditing = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    updateAllLabels()\r\n    setBoardLabels(getChangedLabels(boardLabels))\r\n    setCardLabels(getChangedLabels(cardLabels))\r\n    updateBoard({\r\n      _id: boardId,\r\n      labels: getChangedLabels(boardLabels)\r\n    })\r\n    setIsEditLabelPopupOpen(false)\r\n    setCurrentLabel(label => { return { ...label, title: '', color: '' } })\r\n  }\r\n\r\n  const handleCheckedLabel = (item: LabelModel) => {\r\n    const newLabel = { ...item, active: !item.active };\r\n    const existLabel = [...cardLabels].find((label: { _id: string; }) => label._id === newLabel._id)\r\n\r\n    if (existLabel) {\r\n      const newStateLabels = [...cardLabels].filter((label: { _id: string; }) => label._id !== existLabel._id)\r\n      setCardLabels(newStateLabels)\r\n      updateCard({\r\n        _id: cardId,\r\n        labels: newStateLabels\r\n      })\r\n    } else {\r\n      const newStateLabels = [...cardLabels, newLabel]\r\n      setCardLabels(newStateLabels)\r\n      updateCard({\r\n        _id: cardId,\r\n        labels: newStateLabels\r\n      })\r\n    }\r\n    updateBoard({\r\n      _id: boardId,\r\n    })\r\n  }\r\n\r\n  const handleDeleteLabel = () => {\r\n    const newBoardLabels = [...boardLabels].filter((label) => label._id !== currentLabel._id);\r\n    cards?.filter(card => card.boardId === boardId).map(card => {\r\n      const newCardLabels = card.labels.filter((label: { _id: string }) => label._id !== currentLabel._id);\r\n      setCardLabels(newCardLabels)\r\n      updateCard({\r\n        _id: card._id,\r\n        labels: newCardLabels\r\n      })\r\n    })\r\n    updateBoard({\r\n      _id: boardId,\r\n      labels: newBoardLabels\r\n    })\r\n    setIsEditLabelPopupOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      title={isEditLabelPopupOpen ? 'Edytuj etykietę' : isNewLabelPopupOpen ? 'Dodaj Etykietę' : 'Etykiety'}\r\n      trigger={trigger}\r\n      closePopup={() => setTrigger(false)}\r\n      isEditWindow={isEditLabelPopupOpen || isNewLabelPopupOpen}\r\n      backToMainWindow={() => { setIsEditLabelPopupOpen(false); setIsNewLabelPopupOpen(false) }}\r\n    >\r\n      <div className={styles.cardLabels}>\r\n        {\r\n          !isEditLabelPopupOpen &&\r\n            !isNewLabelPopupOpen ? (\r\n            <>\r\n              <div className={styles.cardLabelsList}>\r\n                {\r\n                  boardLabels.map((label: LabelModel) => (\r\n                    <Label\r\n                      key={label._id}\r\n                      labelId={label._id}\r\n                      title={label.title}\r\n                      color={label.color}\r\n                      cardLabels={cardLabels}\r\n                      openLabelEditWindow={() => {\r\n                        setIsEditLabelPopupOpen(true)\r\n                        handleGetCurrentEditLabel(label._id)\r\n                      }}\r\n                      handleCheckedLabel={() => handleCheckedLabel(label)}\r\n                    >\r\n                    </Label>\r\n                  ))\r\n                }\r\n              </div>\r\n              <TaskButton onClick={() => setIsNewLabelPopupOpen(true)} name={'Utwórz nową etykietę'} />\r\n            </>\r\n          ) : (\r\n            <LabelForm\r\n              formId={isEditLabelPopupOpen ? 'label-title-edit' : isNewLabelPopupOpen ? 'label-title-add' : ''}\r\n              handleChangeTitle={handleChangeLabelTitle}\r\n              handleSubmitForm={isEditLabelPopupOpen ?\r\n                handleSaveLabelEditing : isNewLabelPopupOpen ? handleAddNewLabel :\r\n                  () => console.log('label does not exist')}\r\n              handleDeleteLabel={handleDeleteLabel}\r\n              value={isEditLabelPopupOpen ? currentLabel.title : isNewLabelPopupOpen ? labelTitle : ''}\r\n              onFocus={(e) => e.target.select()}\r\n              selectColor={currentLabel.color}\r\n              setSelectColor={setCurrentLabel}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    </Popup>\r\n  )\r\n}\r\n\r\nexport default LabelsPopup","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport dayjs from 'dayjs'\r\nimport Container from '../../Container/Container'\r\n\r\nimport { useUpdateBoardMutation } from 'store/api/boards'\r\nimport { useUpdateCardMutation } from \"store/api/cards\"\r\n\r\ninterface DisplayStyle {\r\n  title: string,\r\n  backgroundColor: string\r\n  status: string\r\n}\r\n\r\ninterface DeadlineDateProps extends DisplayStyle {\r\n  cardId: string\r\n  boardId: string\r\n  deadline: Date | null\r\n  completed: boolean\r\n  dateIsSameOrBefore: boolean\r\n  deadlineIsSoon: boolean\r\n  setDateTrigger: (value: boolean) => void\r\n  setCompleted: (value: boolean) => void\r\n}\r\n\r\nconst DeadlineDate: React.FC<DeadlineDateProps> = ({\r\n  cardId,\r\n  boardId,\r\n  deadline,\r\n  completed,\r\n  deadlineIsSoon,\r\n  dateIsSameOrBefore,\r\n  setDateTrigger,\r\n  setCompleted,\r\n  title,\r\n  backgroundColor,\r\n  status\r\n}) => {\r\n\r\n  const [updateCard] = useUpdateCardMutation();\r\n  const [updateBoard] = useUpdateBoardMutation();\r\n\r\n  const handleChangeCompleted = () => {\r\n    setCompleted(!completed);\r\n    updateCard({\r\n      _id: cardId,\r\n      completed: !completed\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Container data={deadline} title={'Termin'}>\r\n      <>\r\n        {\r\n          deadline ? (\r\n            <>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={completed}\r\n                onChange={handleChangeCompleted} />\r\n              <button onClick={() => setDateTrigger(true)}\r\n                className={styles.selectedDateBtn}>\r\n                <span>{dayjs(deadline).format('DD-MM-YYYY HH:mm')}</span>\r\n                {\r\n                  dateIsSameOrBefore && !completed ? (\r\n                    <span\r\n                      title={title}\r\n                      style={{ backgroundColor: backgroundColor }}\r\n                      className={styles.notificationSpan}>\r\n                      {status}\r\n                    </span>\r\n                  ) : null\r\n                }\r\n                {\r\n                  deadlineIsSoon && !completed ? (\r\n                    <span\r\n                      title={title}\r\n                      style={{ backgroundColor: backgroundColor }}\r\n                      className={styles.notificationSpan}>\r\n                      {status}\r\n                    </span>\r\n                  ) : null\r\n                }\r\n                {\r\n                  completed ? (\r\n                    <span\r\n                      title={title}\r\n                      style={{ backgroundColor: backgroundColor }}\r\n                      className={styles.notificationSpan}>\r\n                      {status}\r\n                    </span>\r\n                  ) : null\r\n                }\r\n              </button>\r\n            </>\r\n          ) : null\r\n        }\r\n      </>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default DeadlineDate","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport dayjs from 'dayjs'\r\nimport pl from \"date-fns/locale/pl\"\r\nimport DatePicker, { registerLocale } from \"react-datepicker\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport Popup from 'components/common/Popup/Popup'\r\nimport Button from 'components/common/Button/Button'\r\n\r\nimport { useUpdateBoardMutation } from 'store/api/boards'\r\nimport { useUpdateCardMutation } from \"store/api/cards\"\r\n\r\ninterface DatePopupProps {\r\n  cardId: string\r\n  boardId: string\r\n  trigger: boolean\r\n  cardDeadline: Date | null\r\n  setTrigger: (value: boolean) => void\r\n  setCardDeadline: (value: Date | null) => void\r\n}\r\n\r\nconst DatePopup: React.FC<DatePopupProps> = ({\r\n  cardId,\r\n  boardId,\r\n  cardDeadline,\r\n  setCardDeadline,\r\n  trigger,\r\n  setTrigger,\r\n}) => {\r\n\r\n  dayjs.locale('pl');\r\n  registerLocale(\"pl\", pl);\r\n\r\n  const [updateCard] = useUpdateCardMutation();\r\n  const [updateBoard] = useUpdateBoardMutation();\r\n\r\n  const handleSaveDeadline = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    updateCard({\r\n      _id: cardId,\r\n      deadline: cardDeadline\r\n    })\r\n    updateBoard({ _id: boardId })\r\n    setTrigger(false)\r\n  }\r\n\r\n  const handleDeleteDeadline = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    setCardDeadline(null)\r\n    updateCard({\r\n      _id: cardId,\r\n      deadline: null\r\n    })\r\n    updateBoard({ _id: boardId })\r\n    setTrigger(false)\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      title={'Data'}\r\n      trigger={trigger}\r\n      closePopup={() => setTrigger(false)}\r\n      backToMainWindow={() => setTrigger(false)}\r\n    >\r\n      <DatePicker\r\n        dateFormat='DD/MM/YYYY'\r\n        timeFormat=\"hh:mm\"\r\n        locale=\"pl\"\r\n        selected={cardDeadline}\r\n        onChange={(date: Date) => setCardDeadline(date)}\r\n        inline\r\n        showTimeInput\r\n        timeInputLabel={`Godzina:`}\r\n      />\r\n      <label>Termin <br></br>\r\n        <input\r\n          style={{ maxWidth: '100px', marginRight: '10px' }}\r\n          placeholder={dayjs(cardDeadline ? cardDeadline : new Date()).format('DD/MM/YYYY')} />\r\n        <input\r\n          style={{ maxWidth: '100px' }}\r\n          placeholder={dayjs(cardDeadline ? cardDeadline : new Date()).format('HH:mm')} />\r\n      </label>\r\n      <div className={styles.actionsForm}>\r\n        <Button\r\n          onClick={handleSaveDeadline}\r\n          title={'Zapisz'}\r\n          type={'button'}\r\n          style={{ marginRight: '1rem' }} />\r\n        <Button\r\n          onClick={handleDeleteDeadline}\r\n          title={'Usuń'}\r\n          type={'reset'} />\r\n      </div>\r\n    </Popup>\r\n  )\r\n}\r\n\r\nexport default DatePopup","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport Button from 'components/common/Button/Button'\r\nimport IconButton from 'components/common/IconButton/IconButton';\r\nimport { BsXLg } from \"react-icons/bs\";\r\n\r\ninterface TaskFormProps {\r\n  id: string\r\n  handleSubmit: (value: any) => void\r\n  handleChange: (value: any) => void\r\n  closeForm: () => void\r\n  onFocus?: (value: any) => void\r\n  onBlur?: () => void\r\n  value: string\r\n  titleBtn: string\r\n}\r\n\r\nconst TaskForm: React.FC<TaskFormProps> = ({ value, id, titleBtn, onBlur, onFocus, handleChange, handleSubmit, closeForm }) => {\r\n  const placeholder = id === 'list' ? 'Dodaj listę zadań' : 'Dodaj nową kartę'\r\n\r\n  const onKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    if (e.key === 'Enter' || e.code === \"NumpadEnter\") {\r\n      e.stopPropagation();\r\n      handleSubmit(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className={styles.form} >\r\n      <TextareaAutosize\r\n        id={id}\r\n        maxRows={20}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        className={styles.textarea}\r\n        autoFocus={true}\r\n        onChange={handleChange}\r\n        onBlur={onBlur}\r\n        onFocus={onFocus}\r\n        onKeyDown={onKeyDown}\r\n        required\r\n      />\r\n      <div className={styles.buttonsWrapper}>\r\n        <Button title={titleBtn} type={'submit'} onClick={handleSubmit} style={{ marginRight: '16px' }}/>\r\n        <IconButton onClick={closeForm}><BsXLg /></IconButton>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TaskForm\r\n","import React, { useState } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { useUpdateBoardMutation } from 'store/api/boards'\r\nimport { useUpdateCardMutation } from \"store/api/cards\"\r\nimport TaskButton from 'components/common/TaskButton/TaskButton'\r\nimport TaskForm from 'components/TasksBoard/TaskForm/TaskForm'\r\nimport { BsPencil } from 'react-icons/bs'\r\nimport { IoMdAdd } from 'react-icons/io'\r\n\r\ninterface DescriptionProps {\r\n  boardId: string\r\n  cardId: string\r\n  cardDescription: string\r\n  beforeDescription: string\r\n  setCardDescription: (value: string) => void\r\n}\r\n\r\nconst Description: React.FC<DescriptionProps> = ({\r\n  boardId,\r\n  cardId,\r\n  cardDescription,\r\n  beforeDescription,\r\n  setCardDescription\r\n}) => {\r\n  const [updateCard] = useUpdateCardMutation();\r\n  const [updateBoard] = useUpdateBoardMutation();\r\n  const [isDescriptionFormOpen, setIsDescriptionFormOpen] = useState(false)\r\n\r\n  const handleEditCardDescription = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card-description')\r\n      setCardDescription(e.target.value)\r\n  }\r\n\r\n  const handleSaveCardDescription = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    updateCard({\r\n      _id: cardId,\r\n      description: cardDescription\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n    setIsDescriptionFormOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.descriptionContainer}>\r\n      <div className={styles.descriptionHeader}>\r\n        <h4>Opis</h4>\r\n        <div style={{ maxWidth: '100px', marginLeft: '1rem' }}>\r\n          {\r\n            !isDescriptionFormOpen && cardDescription !== undefined && cardDescription !== '' ? (\r\n              <TaskButton\r\n                onClick={() => setIsDescriptionFormOpen(true)}\r\n                name={'Edytuj'} icon={<BsPencil />}\r\n                style={{ height: '30px' }} />\r\n            ) : null\r\n          }\r\n        </div>\r\n      </div>\r\n      {\r\n        isDescriptionFormOpen ?\r\n          <TaskForm\r\n            id={'card-description'}\r\n            handleChange={handleEditCardDescription}\r\n            handleSubmit={handleSaveCardDescription}\r\n            closeForm={() => { setIsDescriptionFormOpen(false); setCardDescription(beforeDescription) }}\r\n            value={cardDescription}\r\n            onFocus={(e) => e.target.select()}\r\n            titleBtn={'Zapisz'}\r\n          /> :\r\n          <div>\r\n            {cardDescription !== '' && cardDescription !== undefined ? (\r\n              <p onClick={() => setIsDescriptionFormOpen(true)}>{cardDescription}</p>\r\n            ) : <TaskButton onClick={() => setIsDescriptionFormOpen(true)} name={'Dodaj opis...'} icon={<IoMdAdd />} />\r\n            }\r\n          </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Description\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { isFileImage } from 'hooks/useIsFileImage'\r\nimport TaskButton from 'components/common/TaskButton/TaskButton'\r\n\r\ninterface AttachmentProps {\r\n  title: string\r\n  src: string\r\n  created: string\r\n  index: number\r\n  active: number\r\n  type: string\r\n  handleDeleteFile: () => void\r\n  handleDownloadFile: () => void\r\n  handleSelectCover: () => void\r\n}\r\n\r\nconst Attachment: React.FC<AttachmentProps> = ({\r\n  created,\r\n  title,\r\n  src,\r\n  type,\r\n  index,\r\n  active,\r\n  handleDeleteFile,\r\n  handleDownloadFile,\r\n  handleSelectCover\r\n}) => {\r\n\r\n  const fileExtension = type.split('/').pop();\r\n\r\n  return (\r\n    <div className={styles.attachment} >\r\n      <div className={styles.fileImg}>\r\n        {\r\n          isFileImage(src) ? (\r\n            <>\r\n              <img src={src} alt=\"attachment-img\" />\r\n              <div className={styles.checkboxWrapper} title='ustaw okładkę'>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={active === index ? true : false}\r\n                  onChange={handleSelectCover}\r\n                  style={{ height: '100%', width: '1rem', marginRight: '8px' }} />\r\n              </div>\r\n            </>\r\n          ) : (<p>{fileExtension}</p>)\r\n        }\r\n      </div>\r\n      <div className={styles.detailsContainer}>\r\n        <h4>{title}</h4>\r\n        <span>{created}</span>\r\n        <div className={styles.buttonsWrapper}>\r\n          <TaskButton\r\n            style={{ height: '25px', margin: '0 8px 0 0' }}\r\n            onClick={handleDeleteFile}\r\n            name={'Skasuj'} />\r\n          <TaskButton\r\n            style={{ height: '25px', margin: '0' }}\r\n            onClick={handleDownloadFile}\r\n            name={'Pobierz'} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Attachment","/* eslint-disable no-useless-escape */\r\nimport React from 'react'\r\nimport axios from 'axios'\r\nimport dayjs from 'dayjs'\r\nimport fileDownload from 'js-file-download'\r\nimport Container from '../../Container/Container'\r\nimport Attachment from '../Attachment/Attachment'\r\n\r\nimport { useUpdateBoardMutation } from 'store/api/boards'\r\nimport { useUpdateCardMutation } from \"store/api/cards\"\r\nimport { useDeleteFileMutation } from 'store/api/files'\r\n\r\ninterface AttachmentsListProps {\r\n  cardId: string\r\n  boardId: string\r\n  files: any\r\n  cardFileIndex: number\r\n  setCardCover: (value: string) => void\r\n  setCardFileIndex: (value: number) => void\r\n}\r\n\r\nconst AttachmentsList: React.FC<AttachmentsListProps> = ({\r\n  cardId,\r\n  boardId,\r\n  files,\r\n  cardFileIndex,\r\n  setCardCover,\r\n  setCardFileIndex\r\n}) => {\r\n  dayjs.locale('pl');\r\n  const [updateCard] = useUpdateCardMutation();\r\n  const [updateBoard] = useUpdateBoardMutation();\r\n  const [deleteFile] = useDeleteFileMutation();\r\n\r\n  const handleDeleteFile = (fileId: string) => {\r\n    const result = window.confirm(\"Usunąć plik?\")\r\n    if (!result) return\r\n    deleteFile(fileId)\r\n    updateCard({\r\n      _id: cardId,\r\n      files: files\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n    if (files.length) {\r\n      setCardCover(files[0].fileUrl)\r\n    }\r\n    else {\r\n      setCardCover('')\r\n    }\r\n  }\r\n\r\n  const handleDownloadFile = (fileUrl: string) => {\r\n    axios.get(fileUrl, {\r\n      responseType: 'blob',\r\n    })\r\n      .then((res) => {\r\n        let filename = fileUrl.replace(/^.*[\\\\\\/]/, '')\r\n        let fileExtension;\r\n        fileExtension = fileUrl.split('.');\r\n        fileExtension = fileExtension[fileExtension.length - 1];\r\n        fileDownload(res.data, `${filename}.${fileExtension}`);\r\n      })\r\n  }\r\n\r\n  const handleSelectCover = (index: number) => {\r\n    setCardFileIndex(index)\r\n    setCardCover(files[index].fileUrl)\r\n    updateCard({\r\n      _id: cardId,\r\n      cover: files[index].fileUrl\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container data={files} title={'Załączniki'}>\r\n      {\r\n        files?.map((file: {\r\n          _id: string;\r\n          fileName: string;\r\n          createdAt: string;\r\n          fileUrl: string;\r\n          fileType: string\r\n        },\r\n          index: number\r\n        ) => (\r\n          <Attachment\r\n            key={file._id}\r\n            title={file.fileName}\r\n            created={`Dodano ${dayjs(file.createdAt).format('DD MMM')} o ${dayjs(file.createdAt).format('HH:mm')}`}\r\n            active={cardFileIndex}\r\n            index={index}\r\n            src={`${file.fileUrl}`}\r\n            type={file.fileType}\r\n            handleDeleteFile={() => handleDeleteFile(file._id)}\r\n            handleDownloadFile={() => handleDownloadFile(file.fileUrl)}\r\n            handleSelectCover={() => handleSelectCover(index)}\r\n          />\r\n        ))\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AttachmentsList","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport Button from 'components/common/Button/Button'\r\n\r\ninterface AttachmentFormProps {\r\n  name: string\r\n  size: number\r\n  label: string\r\n  type: string\r\n  listNames: string[]\r\n  handleSubmitFiles: (value: any) => void\r\n  handleInputState: (value: any) => void\r\n}\r\n\r\nconst AttachmentForm: React.FC<AttachmentFormProps> = ({\r\n  name,\r\n  listNames,\r\n  type,\r\n  handleInputState,\r\n  handleSubmitFiles\r\n}) => {\r\n\r\n  return (\r\n    <div >\r\n      <form className={styles.attachmentForm}>\r\n        <label id={\"formId\"} className={styles.inputContainer}>\r\n          <input\r\n            id={\"formId\"}\r\n            type={type}\r\n            name={name}\r\n            onChange={handleInputState}\r\n            multiple\r\n            hidden\r\n          />\r\n          Dodaj załączniki\r\n        </label>\r\n        <div className={styles.listContainer}>\r\n          {\r\n            listNames.map((name, index) => (\r\n              <span\r\n                key={index}\r\n                className={styles.nameFileSpan}>\r\n                {name}\r\n              </span>\r\n            ))\r\n          }\r\n        </div>\r\n        {\r\n          listNames.length ? (\r\n            <Button\r\n              title={\"Załącz\"}\r\n              type={'submit'}\r\n              onClick={handleSubmitFiles} />\r\n          ) : null\r\n        }\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttachmentForm","import React, { useState, useCallback } from 'react'\r\nimport axios from 'axios'\r\nimport { Line as ProgressLine } from 'rc-progress'\r\nimport Popup from 'components/common/Popup/Popup'\r\nimport AttachmentForm from '../AttachmentForm/AttachmentForm'\r\n\r\nimport { useUpdateBoardMutation } from 'store/api/boards'\r\nimport { useUpdateCardMutation } from \"store/api/cards\"\r\n\r\ninterface AttachmentPopupProps {\r\n  cardId: string\r\n  boardId: string\r\n  trigger: boolean\r\n  setTrigger: (value: boolean) => void\r\n}\r\n\r\nconst AttachmentPopup: React.FC<AttachmentPopupProps> = ({ cardId, boardId, trigger, setTrigger }) => {\r\n  const [updateCard] = useUpdateCardMutation();\r\n  const [updateBoard] = useUpdateBoardMutation();\r\n\r\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\r\n  const [selectedNameFiles, setSelectedNameFiles] = useState<string[]>([]);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [uploadStatus, setUploadStatus] = useState<boolean | null>(null)\r\n\r\n  const handleUploadFiles = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { target: { files } } = e\r\n    if (files !== null) {\r\n      files?.length && setSelectedFiles(Array.from(files))\r\n      const arr = []\r\n      for (let i = 0; i < files.length; i++) {\r\n        arr.push(files[i].name)\r\n        setSelectedNameFiles(arr)\r\n      }\r\n    }\r\n    setUploadStatus(true)\r\n    setUploadProgress(0)\r\n  },\r\n    [],\r\n  );\r\n\r\n  const handleSubmitFiles = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault()\r\n    if (!selectedFiles.length) return;\r\n    if (!uploadStatus) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('cardId', cardId)\r\n    for (let i = 0; i < selectedFiles.length; i++) {\r\n      formData.append('files', selectedFiles[i]);\r\n    }\r\n\r\n    const uploadFileOptions = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      },\r\n      onUploadProgress: (progressEvent: { loaded: number; total: number; }) => {\r\n        const { loaded, total } = progressEvent;\r\n        let percent = Math.floor((loaded * 100) / total)\r\n        setUploadProgress(percent)\r\n      }\r\n    }\r\n\r\n    await axios.post(`${process.env.REACT_APP_API_URL}files`, formData, uploadFileOptions)\r\n      .then(res => {\r\n        updateCard({\r\n          _id: cardId,\r\n        })\r\n        updateBoard({\r\n          _id: boardId\r\n        })\r\n        setUploadStatus(true)\r\n        setTimeout(() => {\r\n          setUploadProgress(0)\r\n          setSelectedNameFiles([])\r\n          setTrigger(false)\r\n        }, 500)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        setUploadStatus(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      title={'Załączniki'}\r\n      trigger={trigger}\r\n      closePopup={() => setTrigger(false)}\r\n      backToMainWindow={() => setTrigger(false)}\r\n    >\r\n      <AttachmentForm\r\n        name={'załączniki'}\r\n        size={0}\r\n        label={'załączniki'}\r\n        type={'file'}\r\n        listNames={selectedNameFiles}\r\n        handleInputState={handleUploadFiles}\r\n        handleSubmitFiles={handleSubmitFiles}\r\n      />\r\n      {uploadProgress > 0 ? (\r\n        <>\r\n          {\r\n            uploadStatus !== null && uploadStatus === true ? (\r\n              <div>\r\n                <ProgressLine percent={uploadProgress} strokeWidth={4} strokeColor=\"#D3D3D3\" />\r\n                <p>{uploadProgress}%</p>\r\n              </div>\r\n            ) : null\r\n          }\r\n          {\r\n            uploadStatus === false ?\r\n              <p style={{ color: 'red' }}>Błąd przesyłania<small> (max 10mb, lub nieprawidłowy format pliku)</small></p>\r\n              : null\r\n          }\r\n        </>\r\n      ) : null\r\n      }\r\n    </Popup>\r\n  )\r\n}\r\n\r\nexport default AttachmentPopup","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport Container from '../../Container/Container'\r\nimport { Product as ProductModel } from 'models/product'\r\n\r\ninterface MaterialsListProps {\r\n  materials: ProductModel[] | undefined\r\n  setTrigger: (value: boolean) => void\r\n}\r\n\r\nconst MaterialsList: React.FC<MaterialsListProps> = ({ materials, setTrigger }) => {\r\n  return (\r\n    <Container data={materials} title={'Wykorzystane materiały'}>\r\n      <>\r\n        {\r\n          materials?.map((material) => (\r\n            <div\r\n              key={material._id}\r\n              className={styles.materials}\r\n              onClick={() => setTrigger(true)}\r\n            >\r\n              <span>{material.name}: {material.used} {material.unit}</span>\r\n            </div>\r\n          ))\r\n        }\r\n      </>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default MaterialsList","/* eslint-disable array-callback-return */\r\nimport React, { useEffect, useState, useCallback } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { Product as ProductModel } from 'models/product';\r\nimport Button from 'components/common/Button/Button'\r\nimport IconButton from 'components/common/IconButton/IconButton';\r\nimport Popup from 'components/common/Popup/Popup'\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\n\r\nimport {\r\n  useGetAllProductsQuery,\r\n  useUpdateProductMutation,\r\n} from \"store/api/products\"\r\nimport {\r\n  useUpdateCardMutation,\r\n} from \"store/api/cards\"\r\nimport {\r\n  useUpdateBoardMutation,\r\n} from 'store/api/boards'\r\n\r\ninterface MaterialsPopupProps {\r\n  cardId: string\r\n  boardId: string\r\n  usedProducts: any\r\n  trigger: boolean\r\n  setTrigger: (value: boolean) => void\r\n}\r\n\r\nconst MaterialsPopup: React.FC<MaterialsPopupProps> = ({\r\n  cardId,\r\n  boardId,\r\n  usedProducts,\r\n  trigger,\r\n  setTrigger\r\n}) => {\r\n  const { data: productsApi } = useGetAllProductsQuery()\r\n  const [updateBoard] = useUpdateBoardMutation();\r\n  const [updateCard] = useUpdateCardMutation()\r\n  const [updateProduct] = useUpdateProductMutation()\r\n  const [selectMaterial, setSelectMaterial] = useState<any>({})\r\n  const [materialsList, setMaterialsList] = useState<ProductModel[]>(usedProducts)\r\n  const [changed, setChanged] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!productsApi) return\r\n    setSelectMaterial(productsApi[0])\r\n  }, [productsApi])\r\n\r\n  const handleSelectProduct = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    if (!productsApi) return\r\n    const product = [...productsApi].find(item => item._id === e.target.value)\r\n    setSelectMaterial(product)\r\n  }\r\n\r\n  const handleAddMaterialToList = () => {\r\n    if ([...materialsList].find(item => item._id === selectMaterial._id)) {\r\n      return alert('produkt został już dodany do listy')\r\n    }\r\n    const newMaterialsList = [...materialsList, { ...selectMaterial, used: 0 }]\r\n    setMaterialsList(newMaterialsList)\r\n    setChanged(true)\r\n  }\r\n\r\n  const handleOnChangeUsedValue = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!materialsList && !productsApi) return\r\n    const { id, valueAsNumber } = e.target\r\n    const newMaterialsList: ProductModel[] = []\r\n    const targetIndex = [...materialsList].findIndex(item => item._id === id);\r\n    const materialQuantity = productsApi?.filter(product => product._id === id).map(p => p.quantity)[0]\r\n    const usedBefore = (usedProducts[targetIndex].used ? usedProducts[targetIndex].used : 0)\r\n    //solution - cannot assign to read only property used of object\r\n    materialsList.map((material, index) => (newMaterialsList[index] = { ...material }))\r\n\r\n    if (targetIndex !== -1) {\r\n      newMaterialsList[targetIndex].used = valueAsNumber + usedBefore\r\n      newMaterialsList[targetIndex].quantity = materialQuantity && materialQuantity + usedBefore\r\n      setMaterialsList(newMaterialsList)\r\n      setChanged(true)\r\n    }\r\n  }\r\n\r\n  const handleRemoveFromList = (id: string) => {\r\n    if (!materialsList) return\r\n    const newMaterialsList = [...materialsList].filter(item => item._id !== id)\r\n    setMaterialsList(newMaterialsList)\r\n    updateCard({\r\n      _id: cardId,\r\n      usedProducts: newMaterialsList\r\n    })\r\n    updateBoard({ _id: boardId })\r\n    const restoreQuantityToStorage = Number([...materialsList]\r\n      .filter(product => product._id === id)\r\n      .map(product => product.quantity))\r\n    updateProduct({\r\n      _id: id,\r\n      quantity: restoreQuantityToStorage\r\n    })\r\n    setChanged(true)\r\n  }\r\n\r\n  const updateStorage = useCallback(() => {\r\n    const materials = [...materialsList]\r\n    materials.map(material => {\r\n      updateProduct({\r\n        _id: material._id,\r\n        quantity: material.used ? (material.quantity - material.used) : material.quantity\r\n      })\r\n    })\r\n\r\n  }, [materialsList, updateProduct])\r\n\r\n  const handleSubmitForm = (e: { preventDefault: () => void }) => {\r\n    e.preventDefault()\r\n    updateCard({\r\n      _id: cardId,\r\n      usedProducts: materialsList\r\n    })\r\n    updateStorage()\r\n    updateBoard({ _id: boardId })\r\n    setChanged(false)\r\n  }\r\n\r\n  const getProductQuantityFromStorage = (id: string) => {\r\n    if (!productsApi) return\r\n    const productQuantity = [...productsApi]\r\n      .filter(product => product._id === id)\r\n      .map(product => product.quantity)[0]\r\n    return productQuantity ? productQuantity : 0\r\n  }\r\n\r\n  return (\r\n    <Popup\r\n      title={'Wykorzystane materiały'}\r\n      trigger={trigger}\r\n      closePopup={() => setTrigger(false)}\r\n    >\r\n      <div className={styles.materialsFormContainer}>\r\n        <form className={styles.materialsForm} onSubmit={handleSubmitForm}>\r\n          <label htmlFor=\"products\">Dodaj produkt z magazynu</label>\r\n          <div className={styles.selectContainer}>\r\n            <select id='products' onChange={handleSelectProduct}>\r\n              {\r\n                productsApi ? (\r\n                  productsApi.map(product => (\r\n                    <option key={product._id} value={product._id}>{product.name}</option>\r\n                  ))\r\n                ) : null\r\n              }\r\n            </select>\r\n            <Button\r\n              onClick={handleAddMaterialToList}\r\n              title={'Dodaj'}\r\n              type={'button'}\r\n              style={{\r\n                height: '38px',\r\n                marginLeft: '10px'\r\n              }} />\r\n          </div>\r\n          <div className={styles.materialsList}>\r\n            {\r\n              materialsList?.map((material) => (\r\n                <div key={material._id} className={styles.formGroup}>\r\n                  <span>{material.name} {material.used ? `${material.used} ${material.unit}` : null}</span>\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"quantity\"\r\n                      value={`stan: ${getProductQuantityFromStorage(material._id)} ${material.unit}`}\r\n                      disabled />\r\n                    <input\r\n                      id={material._id}\r\n                      type=\"number\"\r\n                      name={material.name}\r\n                      defaultValue={0}\r\n                      max={getProductQuantityFromStorage(material._id)}\r\n                      min={0}\r\n                      onChange={handleOnChangeUsedValue}\r\n                    />\r\n                    <IconButton\r\n                      onClick={() => handleRemoveFromList(material._id)}\r\n                      style={{ marginLeft: '8px' }}>\r\n                      <RiDeleteBinLine fontSize={'14px'} />\r\n                    </IconButton>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            }\r\n          </div>\r\n          {\r\n            materialsList?.length ? (\r\n              <Button\r\n                title={'Zapisz'}\r\n                type={'submit'}\r\n                style={{ width: '100%', padding: '0.6rem' }}\r\n                disabled={changed ? false : true} />\r\n            ) : null\r\n          }\r\n        </form>\r\n      </div>\r\n    </Popup>\r\n  )\r\n}\r\n\r\nexport default MaterialsPopup","import React, { useState, useRef, useEffect } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport useOnClickOutside from 'hooks/useOnClickOutside'\r\nimport { useGetBoardQuery, useUpdateBoardMutation } from 'store/api/boards'\r\nimport { useDeleteCardMutation } from \"store/api/cards\"\r\nimport { Card as CardModel } from 'models/card'\r\nimport { Labels as LabelsModel } from 'models/labels'\r\nimport Modal from 'components/common/Modal/Modal'\r\nimport Popup from 'components/common/Popup/Popup'\r\nimport TaskButton from 'components/common/TaskButton/TaskButton'\r\nimport Cover from './Cover/Cover'\r\nimport Title from './Title/Title'\r\nimport Labels from './Labels/LabelsList/LabelsList'\r\nimport LabelsPopup from './Labels/LabelsPopup/LabelsPopup'\r\nimport DeadlineDate from './Date/DeadlineDate/DeadlineDate'\r\nimport DatePopup from './Date/DatePopup/DatePopup'\r\nimport Description from './Description/Description'\r\nimport Attachments from './Attachments/AttachmentsList/AttachmentsList'\r\nimport AttachmentsPopup from './Attachments/AttachmentsPopup/AttachmentsPopup'\r\nimport MaterialsList from './Materials/MaterialsList/MaterialsList'\r\nimport MaterialsPopup from './Materials/MaterialsPopup/MaterialsPopup'\r\nimport { BiTask } from 'react-icons/bi'\r\nimport { GrAttachment } from 'react-icons/gr'\r\nimport { BsStopwatch } from 'react-icons/bs'\r\nimport { MdOutlineLabel } from 'react-icons/md'\r\nimport { RiDeleteBinLine } from 'react-icons/ri'\r\n\r\ninterface CardModalProps extends CardModel {\r\n  dateIsSameOrBefore: boolean\r\n  deadlineIsSoon: boolean\r\n  cardFileIndex: number\r\n  cardDateDisplay: {\r\n    style: {\r\n      backgroundColor: string\r\n    },\r\n    title: string\r\n    status: string\r\n  }\r\n  setIsCardWindowOpen: () => void\r\n  setCardCompleted: (value: boolean) => void\r\n  setCardCover: (value: string) => void\r\n  setCardFileIndex: (value: number) => void\r\n}\r\n\r\nconst CardModal: React.FC<CardModalProps> = ({\r\n  _id,\r\n  boardId,\r\n  title,\r\n  description,\r\n  completed,\r\n  labels,\r\n  deadline,\r\n  cover,\r\n  files,\r\n  usedProducts,\r\n  listTitle,\r\n  dateIsSameOrBefore,\r\n  deadlineIsSoon,\r\n  cardDateDisplay,\r\n  cardFileIndex,\r\n  setCardCompleted,\r\n  setIsCardWindowOpen,\r\n  setCardCover,\r\n  setCardFileIndex,\r\n}) => {\r\n  const { data: board } = useGetBoardQuery(boardId);\r\n  const [deleteCard] = useDeleteCardMutation();\r\n  const [updateBoard] = useUpdateBoardMutation();\r\n\r\n  const [labelsTrigger, setLabelsTrigger] = useState(false)\r\n  const [dateTrigger, setDateTrigger] = useState(false)\r\n  const [attachmentsTrigger, setAttachmentsTrigger] = useState(false)\r\n  const [valuationTrigger, setValuationTrigger] = useState(false)\r\n  const [materialsTrigger, setMaterialsTrigger] = useState(false)\r\n\r\n  const [cardTitle, setCardTitle] = useState<string>(title)\r\n  const [cardDeadline, setCardDeadline] = useState<Date | null>(deadline ? new Date(deadline) : new Date())\r\n  const [cardDescription, setCardDescription] = useState<string>(description)\r\n  const [boardLabels, setBoardLabels] = useState<LabelsModel[] | undefined>([])\r\n  const [cardLabels, setCardLabels] = useState<LabelsModel[]>(labels)\r\n\r\n  const refModal = useRef(null)\r\n\r\n  useEffect(() => {\r\n    if (board) {\r\n      setBoardLabels(board.labels)\r\n    }\r\n  }, [board])\r\n\r\n  useOnClickOutside(refModal, setIsCardWindowOpen)\r\n\r\n  return (\r\n    <Modal trigger={true} closeModal={setIsCardWindowOpen}>\r\n      <div className={styles.cardWindow}>\r\n        <Cover cover={cover} />\r\n        <Title\r\n          cardId={_id}\r\n          boardId={boardId}\r\n          cardTitle={cardTitle}\r\n          listTitle={listTitle}\r\n          setCardTitle={setCardTitle}\r\n        />\r\n        <div className={styles.cardWindowWrapper}>\r\n          <div className={styles.cardWindowContent}>\r\n            <Labels\r\n              cardLabels={cardLabels}\r\n              setLabelsTrigger={() => setLabelsTrigger(true)} />\r\n            <DeadlineDate\r\n              cardId={_id}\r\n              boardId={boardId}\r\n              deadline={deadline}\r\n              completed={completed}\r\n              deadlineIsSoon={deadlineIsSoon}\r\n              dateIsSameOrBefore={dateIsSameOrBefore}\r\n              setDateTrigger={setDateTrigger}\r\n              setCompleted={setCardCompleted}\r\n              title={cardDateDisplay.title}\r\n              backgroundColor={cardDateDisplay.style.backgroundColor}\r\n              status={cardDateDisplay.status}\r\n            />\r\n            <Description\r\n              boardId={boardId}\r\n              cardId={_id}\r\n              cardDescription={cardDescription}\r\n              beforeDescription={description}\r\n              setCardDescription={setCardDescription}\r\n            />\r\n            <MaterialsList\r\n              materials={usedProducts}\r\n              setTrigger={setMaterialsTrigger}\r\n            />\r\n            <Attachments\r\n              cardId={_id}\r\n              boardId={boardId}\r\n              files={files}\r\n              cardFileIndex={cardFileIndex}\r\n              setCardCover={setCardCover}\r\n              setCardFileIndex={setCardFileIndex}\r\n            />\r\n          </div>\r\n          <div className={styles.cardWindowSidebar} >\r\n            <LabelsPopup\r\n              cardId={_id}\r\n              boardId={boardId}\r\n              boardLabels={boardLabels}\r\n              cardLabels={cardLabels}\r\n              setBoardLabels={setBoardLabels}\r\n              setCardLabels={setCardLabels}\r\n              trigger={labelsTrigger}\r\n              setTrigger={setLabelsTrigger}\r\n            />\r\n            <DatePopup\r\n              cardId={_id}\r\n              boardId={boardId}\r\n              cardDeadline={cardDeadline}\r\n              setCardDeadline={setCardDeadline}\r\n              trigger={dateTrigger}\r\n              setTrigger={setDateTrigger}\r\n            />\r\n            <AttachmentsPopup\r\n              cardId={_id}\r\n              boardId={boardId}\r\n              trigger={attachmentsTrigger}\r\n              setTrigger={setAttachmentsTrigger}\r\n            />\r\n            <MaterialsPopup\r\n              cardId={_id}\r\n              boardId={boardId}\r\n              usedProducts={usedProducts}\r\n              trigger={materialsTrigger}\r\n              setTrigger={setMaterialsTrigger}\r\n            />\r\n            <Popup\r\n              title={'Dodaj wycenę'}\r\n              trigger={valuationTrigger}\r\n              closePopup={() => setValuationTrigger(false)}\r\n            >\r\n              <div>\r\n                <p>Is in progress ...</p>\r\n              </div>\r\n            </Popup>\r\n            <TaskButton\r\n              onClick={() => setLabelsTrigger(true)}\r\n              name={'Etykiety'}\r\n              icon={<MdOutlineLabel />} />\r\n            <TaskButton\r\n              onClick={() => setDateTrigger(true)}\r\n              name={'Data'}\r\n              icon={<BsStopwatch />} />\r\n            <TaskButton\r\n              onClick={() => setAttachmentsTrigger(true)}\r\n              name={'Załącznik'}\r\n              icon={<GrAttachment />} />\r\n            <TaskButton\r\n              onClick={() => setMaterialsTrigger(true)}\r\n              name={'Magazyn'}\r\n              icon={<BiTask />} />\r\n            <TaskButton\r\n              onClick={() => setValuationTrigger(true)}\r\n              name={'Dodaj wycenę'}\r\n              icon={<BiTask />} />\r\n            <div className={styles.divider}></div>\r\n            <TaskButton onClick={() => {\r\n              const result = window.confirm(\"Usunąć kartę?\")\r\n              if (!result) return\r\n              deleteCard(_id);\r\n              updateBoard({ _id: boardId })\r\n            }}\r\n              name={'Usuń'}\r\n              icon={<RiDeleteBinLine />} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CardModal","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport dayjs from 'dayjs';\r\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport duration from 'dayjs/plugin/duration'\r\nimport 'dayjs/locale/pl';\r\nimport {\r\n  useUpdateBoardMutation,\r\n} from 'store/api/boards'\r\nimport {\r\n  useUpdateCardMutation,\r\n} from \"store/api/cards\";\r\nimport useHover from 'hooks/useHover'\r\nimport { isFileImage } from 'hooks/useIsFileImage'\r\nimport { Card as CardModel } from 'models/card'\r\nimport Box from 'components/common/Box/Box'\r\nimport CardWindow from '../CardWindow/CardWindow';\r\nimport { GrTextAlignFull } from 'react-icons/gr';\r\nimport { BsStopwatch } from 'react-icons/bs';\r\nimport { ImCheckboxUnchecked } from 'react-icons/im';\r\nimport { ImCheckboxChecked } from 'react-icons/im';\r\nimport { GrAttachment } from 'react-icons/gr';\r\nimport { BiCategory } from 'react-icons/bi'\r\n\r\nexport interface CardProps extends CardModel {\r\n  index: number\r\n  setIsDragDisabled: (value: boolean) => void\r\n}\r\n\r\nconst TaskCard: React.FC<CardProps> = ({\r\n  _id,\r\n  boardId,\r\n  title,\r\n  index,\r\n  listTitle,\r\n  description,\r\n  completed,\r\n  labels,\r\n  deadline,\r\n  cover,\r\n  files,\r\n  usedProducts,\r\n  createdAt,\r\n  setIsDragDisabled,\r\n}) => {\r\n  const [updateCard] = useUpdateCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n\r\n  const [isCardModalOpen, setIsCardModalOpen] = useState<boolean>(false)\r\n  const [cardCompleted, setCardCompleted] = useState(completed)\r\n  const [nowDate, setNowDate] = useState(Date.now())\r\n  const [cardCover, setCardCover] = useState<string>(cover)\r\n  const [cardFileIndex, setCardFileIndex] = useState(0)\r\n  const [cardFiles, setCardFiles] = useState(files)\r\n\r\n  dayjs.locale('pl');\r\n  dayjs.extend(isSameOrBefore)\r\n  dayjs.extend(duration)\r\n  dayjs.extend(relativeTime)\r\n\r\n  const hoverRef = useRef(null)\r\n  const isHover = useHover(hoverRef)\r\n\r\n  useEffect(() => {\r\n    const intervalIsSameOrBefore = setInterval(() => setNowDate(Date.now()), 100000)\r\n    return () => clearInterval(intervalIsSameOrBefore)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (files) {\r\n      setCardFiles(files)\r\n    }\r\n  }, [files])\r\n\r\n  useEffect(() => {\r\n    displayCover()\r\n  }, [cardFiles])\r\n\r\n  useEffect(() => {\r\n    updateCard({ _id, cover: cardCover })\r\n    updateBoard({ _id: boardId })\r\n  }, [cardCover])\r\n\r\n  const displayCover = () => {\r\n    if (cardFiles) {\r\n      const newFiles = [...cardFiles]\r\n      const filesOnlyImages = newFiles.filter(file => isFileImage(file.fileUrl))\r\n      const selectedCover = filesOnlyImages.find((file: { fileUrl: string }) => file.fileUrl === cover)\r\n      let activeIndex = filesOnlyImages.indexOf(selectedCover);\r\n      const indexOnlyImages = newFiles.findIndex(el => isFileImage(el.fileUrl))\r\n      if (filesOnlyImages.length) {\r\n        if (activeIndex < 0) {\r\n          setCardCover(filesOnlyImages[0].fileUrl)\r\n          setCardFileIndex(indexOnlyImages)\r\n        } else {\r\n          setCardCover(filesOnlyImages[activeIndex].fileUrl)\r\n          setCardFileIndex(activeIndex)\r\n        }\r\n      }\r\n      else {\r\n        setCardCover('')\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleOpenCardModal = () => {\r\n    setIsCardModalOpen(true)\r\n    setIsDragDisabled(true)\r\n  }\r\n\r\n  const handleCloseCardModal = () => {\r\n    setIsCardModalOpen(false)\r\n    setIsDragDisabled(false)\r\n  }\r\n\r\n  const handleChangeCompleted = () => {\r\n    setCardCompleted(!cardCompleted);\r\n    updateCard({\r\n      _id: _id,\r\n      completed: !cardCompleted\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n  };\r\n\r\n  const fiveHours = 300 //minutes\r\n  const dateIsSameOrBefore = dayjs(deadline).isSameOrBefore(nowDate, 'minute')\r\n  const timeToDeadline = dayjs(deadline).diff(dayjs(nowDate), 'minute', true)\r\n  const deadlineIsSoon = (timeToDeadline < fiveHours && timeToDeadline > 0) ? true : false\r\n\r\n  const cardDateDisplay = {\r\n    style: {\r\n      color: (cardCompleted || dateIsSameOrBefore || deadlineIsSoon) ? 'white' : 'black',\r\n      backgroundColor: cardCompleted ? 'green' : dateIsSameOrBefore ? 'red' : deadlineIsSoon ? 'orange' : 'transparent'\r\n    },\r\n    title: cardCompleted ? 'Ta karta została ukończona' :\r\n      dateIsSameOrBefore ? 'Ta karta jest przeterminowana' :\r\n        deadlineIsSoon ? `Deadline ${dayjs(deadline).fromNow()}` : 'Karta jest na później',\r\n    status: cardCompleted ? 'zrealizowany' :\r\n      dateIsSameOrBefore ? 'termin przekroczony' :\r\n        deadlineIsSoon ? `wkrótce` : '',\r\n    iconStyle: {\r\n      marginRight: '5px',\r\n      fontSize: '14px',\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.card}>\r\n        <Draggable draggableId={_id} index={index} >\r\n          {provided => (\r\n            <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n              <Box onClick={handleOpenCardModal}>\r\n                {\r\n                  cardFiles.length ? (\r\n                    <div className={styles.cardCover} style={\r\n                      {\r\n                        backgroundColor: cardCover,\r\n                        backgroundImage: `url(${cardCover})`,\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        backgroundPosition: 'center'\r\n                      }\r\n                    }>\r\n                    </div>\r\n                  ) : null\r\n                }\r\n                <div className={styles.cardDetails}>\r\n                  {\r\n                    labels.length ? (\r\n                      <div className={styles.labelsContainer} onClick={handleOpenCardModal}>\r\n                        {\r\n                          labels.map((label: {\r\n                            _id: string;\r\n                            active: boolean;\r\n                            color: string;\r\n                            title: string\r\n                          }) => (\r\n                            <div\r\n                              title={`${label.title}`}\r\n                              key={label._id}\r\n                              className={styles.cardLabel}\r\n                              style={{ backgroundColor: `${label.color}` }} />\r\n                          ))\r\n                        }\r\n                      </div>\r\n                    ) : null\r\n                  }\r\n                  <p>{title}</p>\r\n                  <div className={styles.iconsContainer}>\r\n                    <div ref={hoverRef}>\r\n                      {\r\n                        deadline ? (\r\n                          <button\r\n                            className={styles.dateBtn}\r\n                            onClick={handleChangeCompleted}\r\n                            style={cardDateDisplay.style}\r\n                            title={cardDateDisplay.title}\r\n\r\n                          >\r\n                            {\r\n                              isHover ? (cardCompleted ? (\r\n                                <ImCheckboxChecked style={cardDateDisplay.iconStyle} />\r\n                              ) : (\r\n                                <ImCheckboxUnchecked style={cardDateDisplay.iconStyle} />\r\n                              )) : <BsStopwatch style={cardDateDisplay.iconStyle} />\r\n                            }\r\n                            {dayjs(deadline).format('DD MMM')}\r\n                          </button>\r\n                        ) : null\r\n                      }\r\n                    </div>\r\n                    {\r\n                      description ? (\r\n                        <div className={styles.icon}\r\n                          title=\"Ta karta ma opis.\">\r\n                          <GrTextAlignFull onClick={handleOpenCardModal} />\r\n                        </div>\r\n                      ) : null\r\n                    }\r\n                    {\r\n                      cardFiles.length ? (\r\n                        <div className={styles.icon}\r\n                          title=\"Załączniki\"><GrAttachment />\r\n                          <span>{cardFiles.length}</span>\r\n                        </div>\r\n                      ) : null\r\n                    }\r\n                    {\r\n                      usedProducts?.length ? (\r\n                        <div className={styles.icon}\r\n                          title=\"Materiały\"><BiCategory />\r\n                          <span>{usedProducts.length}</span>\r\n                        </div>\r\n                      ) : null\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </Box>\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      </div>\r\n      {\r\n        isCardModalOpen ?\r\n          <CardWindow\r\n            _id={_id}\r\n            listTitle={listTitle}\r\n            title={title}\r\n            description={description}\r\n            boardId={boardId}\r\n            deadline={deadline}\r\n            labels={labels}\r\n            files={cardFiles}\r\n            usedProducts={usedProducts}\r\n            cover={cardCover}\r\n            completed={cardCompleted}\r\n            cardFileIndex={cardFileIndex}\r\n            dateIsSameOrBefore={dateIsSameOrBefore}\r\n            deadlineIsSoon={deadlineIsSoon}\r\n            cardDateDisplay={cardDateDisplay}\r\n            createdAt={createdAt}\r\n            setCardCompleted={setCardCompleted}\r\n            setIsCardWindowOpen={handleCloseCardModal}\r\n            setCardFileIndex={setCardFileIndex}\r\n            setCardCover={setCardCover}\r\n          /> : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskCard","import React, { useState, useRef } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { useDebouncedCallback } from 'use-debounce';\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\n\r\nimport {\r\n  useDeleteListMutation,\r\n  useUpdateListMutation,\r\n  useDeleteAllCardsOfListMutation,\r\n} from \"store/api/lists\";\r\nimport { useUpdateBoardMutation } from 'store/api/boards'\r\nimport { useAddCardMutation } from \"store/api/cards\"\r\n\r\nimport useOnClickOutside from 'hooks/useOnClickOutside'\r\nimport { List as ListInterface } from 'models/list'\r\n\r\nimport TextareaAutosize from 'react-textarea-autosize'\r\nimport Card from '../Card/Card'\r\nimport TaskForm from '../TaskForm/TaskForm'\r\nimport TaskButton from 'components/common/TaskButton/TaskButton'\r\nimport IconButton from 'components/common/IconButton/IconButton'\r\nimport Popup from 'components/common/Popup/Popup'\r\nimport { BsThreeDots } from \"react-icons/bs\"\r\nimport { GoPlus } from \"react-icons/go\"\r\n\r\ninterface PropsList extends ListInterface {\r\n  index: number\r\n}\r\n\r\nconst List: React.FC<PropsList> = ({ _id, boardId, title, cards, index }) => {\r\n  const [addCard] = useAddCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n  const [updateList] = useUpdateListMutation()\r\n  const [deleteList] = useDeleteListMutation()\r\n  const [deleteAllCardsOfList] = useDeleteAllCardsOfListMutation()\r\n\r\n  const [listTitle, setListTitle] = useState<string>(title)\r\n  const [cardTitle, setCardTitle] = useState<string>('')\r\n  const [isCardFormOpen, setIsCardFormOpen] = useState(false)\r\n  const [isTitleFormOpen, setIsTitleFormOpen] = useState(false)\r\n  const [isDragDisabled, setIsDragDisabled] = useState(false)\r\n  const [popupTrigger, setPopupTrigger] = useState(false)\r\n  const ref = useRef(null)\r\n\r\n  const debouncedListTitle = useDebouncedCallback(\r\n    (value) => {\r\n      updateList({\r\n        _id,\r\n        title: value\r\n      })\r\n    },\r\n    500\r\n  )\r\n\r\n  const handleChangeListTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'list') setListTitle(e.target.value)\r\n    debouncedListTitle(e.target.value)\r\n  }\r\n\r\n  const handleAddCardTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card') setCardTitle(e.target.value)\r\n  }\r\n\r\n  const handleOnKeyDownListTitle = (e: React.KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    if (e.key === 'Enter' || e.code === \"NumpadEnter\") {\r\n      e.stopPropagation();\r\n      setIsTitleFormOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleAddCard = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    if (cardTitle.length === 0) return\r\n    addCard({\r\n      boardId,\r\n      listId: _id,\r\n      title: cardTitle\r\n    })\r\n    updateBoard({ _id: boardId })\r\n    setIsCardFormOpen(false)\r\n    setCardTitle('')\r\n  }\r\n\r\n  const handleDeleteAllCardsOfList = () => {\r\n    deleteAllCardsOfList({ _id })\r\n    updateBoard({ _id: boardId })\r\n    setPopupTrigger(false)\r\n  }\r\n\r\n  const handleDeleteList = () => {\r\n    const result = window.confirm(\"Usunąć listę?\")\r\n    if (!result) return\r\n    deleteList(_id)\r\n    updateBoard({ _id: boardId })\r\n  }\r\n\r\n  const handleSortCardsByDate = (props: string) => {\r\n    const newCards = [...cards]\r\n    if (props === 'sort-from-oldest') newCards.sort((a, b) => +new Date(a.createdAt) - +new Date(b.createdAt))\r\n    if (props === 'sort-from-newest') newCards.sort((a, b) => +new Date(b.createdAt) - +new Date(a.createdAt))\r\n    updateList({\r\n      _id,\r\n      cards: newCards\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n    setPopupTrigger(false)\r\n    setIsDragDisabled(false)\r\n  }\r\n\r\n  const handleCloseForm = () => { setIsCardFormOpen(false); setCardTitle('') }\r\n  useOnClickOutside(ref, handleCloseForm)\r\n\r\n  return (\r\n    <div>\r\n      <Draggable draggableId={String(_id)} index={index} isDragDisabled={isDragDisabled}>\r\n        {provided => (\r\n          <div {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} className={styles.list}>\r\n            <div className={styles.header}>\r\n              <div onClick={() => setIsTitleFormOpen(true)} ref={ref}>\r\n                {\r\n                  isTitleFormOpen ?\r\n                    <div className={styles.titleWrapper}>\r\n                      <TextareaAutosize\r\n                        id='list'\r\n                        autoFocus={true}\r\n                        value={listTitle}\r\n                        className={styles.textarea}\r\n                        onChange={handleChangeListTitle}\r\n                        onFocus={(e) => e.target.select()}\r\n                        onBlur={() => setIsTitleFormOpen(false)}\r\n                        onKeyDown={handleOnKeyDownListTitle}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    : <div className={styles.titleWrapper}><h2>{listTitle}</h2></div>\r\n                }\r\n              </div>\r\n              <IconButton onClick={() => {\r\n                setPopupTrigger(true)\r\n                setIsDragDisabled(true)\r\n              }}>\r\n                <BsThreeDots style={{ fontSize: \"1.3em\" }} />\r\n              </IconButton>\r\n              <Popup\r\n                title={'Akcje listy'}\r\n                trigger={popupTrigger}\r\n                closePopup={() => {\r\n                  setPopupTrigger(false)\r\n                  setIsDragDisabled(false)\r\n                }}\r\n                top={'30px'}\r\n                right={'-30px'}\r\n              >\r\n                <div className={styles.popupContent}>\r\n                  {\r\n                    cards.length > 1 ? (\r\n                      <>\r\n                        <TaskButton\r\n                          onClick={() => handleSortCardsByDate('sort-from-newest')}\r\n                          name={'Sortuj karty od najnowszych'}\r\n                        />\r\n                        <TaskButton\r\n                          onClick={() => handleSortCardsByDate('sort-from-oldest')}\r\n                          name={'Sortuj karty od najstarszych'}\r\n                        />\r\n                        <div className={styles.divider}></div>\r\n                      </>\r\n                    ) : null\r\n                  }\r\n                  {\r\n                    cards.length ? (\r\n                      <TaskButton\r\n                        onClick={handleDeleteAllCardsOfList}\r\n                        name={'Usuń wszystkie karty'}\r\n                      />\r\n                    ) : null\r\n                  }\r\n                  <TaskButton\r\n                    onClick={handleDeleteList}\r\n                    name={'Usuń listę'}\r\n                  />\r\n                </div>\r\n              </Popup>\r\n            </div>\r\n            <Droppable droppableId={String(_id)} type=\"card\">\r\n              {provided => (\r\n                <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                  <div className={styles.cardsContainer}>\r\n                    {\r\n                      cards?.map((card, index: number) => (\r\n                        <Card\r\n                          _id={card._id}\r\n                          index={index}\r\n                          key={card._id}\r\n                          boardId={boardId}\r\n                          title={card.title}\r\n                          deadline={card.deadline}\r\n                          completed={card.completed}\r\n                          description={card.description}\r\n                          labels={card.labels}\r\n                          files={card.files}\r\n                          cover={card.cover}\r\n                          usedProducts={card.usedProducts}\r\n                          listTitle={listTitle}\r\n                          createdAt={card.createdAt}\r\n                          setIsDragDisabled={setIsDragDisabled}\r\n                        />\r\n                      ))\r\n                    }\r\n                    {provided.placeholder}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n            <div className={styles.listForm}>\r\n              {isCardFormOpen ? (\r\n                <div ref={ref}>\r\n                  <TaskForm\r\n                    id={'card'}\r\n                    handleChange={handleAddCardTitle}\r\n                    handleSubmit={handleAddCard}\r\n                    closeForm={() => { setIsCardFormOpen(false); setCardTitle('') }}\r\n                    value={cardTitle}\r\n                    titleBtn={'Dodaj Kartę'}\r\n                  />\r\n                </div>\r\n              ) : <TaskButton\r\n                onClick={() => setIsCardFormOpen(true)}\r\n                name={'Dodaj kartę'} icon={<GoPlus />}\r\n              />\r\n              }\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List","import React, { useEffect, useState, useRef } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd'\r\nimport { useUpdateBoardMutation } from 'store/api/boards'\r\nimport { useAddListMutation, useUpdateListMutation } from 'store/api/lists';\r\nimport { useUpdateCardMutation } from \"store/api/cards\";\r\nimport useOnClickOutside from 'hooks/useOnClickOutside';\r\nimport { Board as BoardModel } from 'models/board'\r\nimport { List as ListModel} from 'models/list'\r\nimport TaskButton from 'components/common/TaskButton/TaskButton'\r\nimport List from './List/List'\r\nimport TaskForm from './TaskForm/TaskForm'\r\nimport { GoPlus } from \"react-icons/go\";\r\n\r\nconst Board: React.FC<BoardModel> = ({ _id, lists: listsApi }) => {\r\n  const [addList] = useAddListMutation()\r\n  const [updateList] = useUpdateListMutation()\r\n  const [updateCard] = useUpdateCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n\r\n  const [listTitle, setListTitle] = useState('');\r\n  const [isOpenForm, setIsOpenForm] = useState(false)\r\n  const [lists, setLists] = useState<ListModel[]>([])\r\n  const formRef = useRef(null)\r\n\r\n  const closeForm = () => { setIsOpenForm(false); setListTitle('') }\r\n  useOnClickOutside(formRef, closeForm)\r\n\r\n  useEffect(() => {\r\n    if (listsApi) {\r\n      setLists(listsApi)\r\n    }\r\n  }, [listsApi])\r\n\r\n  const handleChangeListTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    if (e.target.id === 'list') setListTitle(e.target.value)\r\n  }\r\n\r\n  const handleAddList = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    if (listTitle.length === 0) return\r\n    addList({\r\n      title: listTitle,\r\n      boardId: _id,\r\n    })\r\n    updateBoard({\r\n      _id: _id,\r\n    })\r\n    setListTitle('')\r\n    setIsOpenForm(false)\r\n  }\r\n\r\n  const onDragEnd = (result: DropResult) => {\r\n    const { destination, source, type, draggableId } = result\r\n    const newLists = [...lists]\r\n    if (!destination) return\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return\r\n\r\n    if (type === 'list') {\r\n      const [removed] = newLists.splice(source.index, 1)\r\n      newLists.splice(destination.index, 0, removed)\r\n\r\n      setLists(newLists)\r\n      updateBoard({\r\n        _id: _id,\r\n        lists: newLists\r\n      })\r\n    }\r\n\r\n    if (type === 'card') {\r\n      const sourceList = newLists.find((list: { _id: string }) => list._id === source.droppableId)\r\n      const destinationList = newLists.find((list: { _id: string; }) => list._id === destination.droppableId)\r\n\r\n      if (source.droppableId === destination.droppableId && sourceList) {\r\n        const newCards = [...sourceList.cards]\r\n        const [removed] = newCards.splice(source.index, 1)\r\n        newCards.splice(destination.index, 0, removed)\r\n\r\n        const updateState = {\r\n          ...sourceList,\r\n          cards: newCards\r\n        }\r\n\r\n        //replace the contents of the list\r\n        const newState = newLists.map(obj => [updateState].find(o => o._id === obj._id) || obj);\r\n\r\n        setLists(newState)\r\n        updateList({\r\n          _id: source.droppableId,\r\n          cards: newCards\r\n        })\r\n\r\n      }\r\n\r\n      if (source.droppableId !== destination.droppableId && sourceList && destinationList) {\r\n        const startCards = [...sourceList.cards]\r\n        const finishCards = [...destinationList.cards]\r\n\r\n        const [removed] = startCards.splice(source.index, 1)\r\n        const startState = {\r\n          ...sourceList,\r\n          cards: startCards\r\n        }\r\n\r\n        finishCards.splice(destination.index, 0, removed)\r\n        const finishState = {\r\n          ...destinationList,\r\n          cards: finishCards\r\n        }\r\n\r\n        //converted to array\r\n        const newCards = [startState, finishState]\r\n\r\n        //replace the contents of the lists\r\n        const newState = newLists.map(obj => newCards.find(o => o._id === obj._id) || obj);\r\n\r\n        setLists(newState)\r\n\r\n        updateCard({\r\n          _id: draggableId,\r\n          listId: destination.droppableId\r\n        })\r\n        // update source list\r\n        updateList({\r\n          _id: source.droppableId,\r\n          cards: startCards\r\n        })\r\n        //update destination list\r\n        updateList({\r\n          _id: destination.droppableId,\r\n          cards: finishCards\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.board}>\r\n      <DragDropContext onDragEnd={onDragEnd} >\r\n        <Droppable droppableId=\"all-list\" direction=\"horizontal\" type=\"list\">\r\n          {provided => (\r\n            <div className={styles.listContainer}\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              {\r\n                lists?.map((list, index: number) => (\r\n                  <List\r\n                    _id={list._id}\r\n                    index={index}\r\n                    boardId={list.boardId}\r\n                    key={list._id}\r\n                    title={list.title}\r\n                    cards={list.cards}\r\n                  />\r\n                ))\r\n              }\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        <div className={styles.formContainer}>\r\n          {isOpenForm ?\r\n            <div className={styles.addListForm} ref={formRef}>\r\n              <TaskForm\r\n                id='list'\r\n                handleChange={handleChangeListTitle}\r\n                handleSubmit={handleAddList}\r\n                closeForm={() => { setIsOpenForm(false); setListTitle('') }}\r\n                value={listTitle}\r\n                titleBtn={'Dodaj Listę'}\r\n              />\r\n            </div>\r\n            : <TaskButton\r\n              onClick={() => setIsOpenForm(true)}\r\n              name={'Dodaj listę zadań'}\r\n              icon={<GoPlus style={{ margin: '.3rem 0' }} />}\r\n            />\r\n          }\r\n        </div>\r\n      </DragDropContext>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board","import React from 'react'\r\nimport Board from 'components/TasksBoard/TasksBoard';\r\nimport { useGetAllBoardsQuery } from 'store/api/boards';\r\nimport ErrorMessage from 'components/common/Messages/ErrorMessage'\r\n\r\nconst TasksPage: React.FC = () => {\r\n  const { data, error, isLoading } = useGetAllBoardsQuery()\r\n  return (\r\n    <>\r\n      {error && <ErrorMessage message={'Wystąpił błąd serwera, nie można wyświetlić zawartości'} />}\r\n      {\r\n        isLoading ? <div>Loading...</div> : (\r\n          data?.map((board) => (\r\n            < Board\r\n              key={board._id}\r\n              _id={board._id}\r\n              lists={board.lists}\r\n            />\r\n          ))\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TasksPage\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport styles from './styles.module.scss'\r\nimport { Product as ProductModel } from 'models/product';\r\nimport Button from 'components/common/Button/Button';\r\nimport Input from 'components/common/Input/Input';\r\nimport ErrorMessage from 'components/common/Messages/ValidateMessage';\r\nimport { ReduceReturnType } from '../Storage'\r\n\r\nconst validation = {\r\n  name: {\r\n    required: true,\r\n    maxLength: 40,\r\n    minLength: 2,\r\n  },\r\n  category: {\r\n    required: true,\r\n    maxLength: 20,\r\n    minLength: 2,\r\n  },\r\n  quantity: {\r\n    required: true,\r\n    pattern: /[0-9]/g\r\n  },\r\n  price: {\r\n    required: true,\r\n    pattern: /[0-9]/g\r\n  }\r\n}\r\n\r\ninterface DefaultValuesProps {\r\n  _id?: string\r\n  defaultName?: string\r\n  defaultCategory?: string\r\n  defaultQuantity?: number\r\n  defaultUnit?: string\r\n  defaultPrice?: number\r\n}\r\n\r\ninterface AddProductFormProps extends DefaultValuesProps {\r\n  categoryList: ReduceReturnType | undefined\r\n  formTitle: string\r\n  message?: JSX.Element | boolean | null\r\n  handleSubmitForm: (data: ProductModel) => void\r\n}\r\n\r\nconst ProductForm: React.FC<AddProductFormProps> = ({\r\n  defaultName,\r\n  defaultCategory,\r\n  defaultQuantity,\r\n  defaultUnit,\r\n  defaultPrice,\r\n  categoryList,\r\n  formTitle,\r\n  message,\r\n  handleSubmitForm\r\n}) => {\r\n\r\n  const [categorySwitch, setCategorySwitch] = useState(true)\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<ProductModel>();\r\n\r\n  const nameErrors = (type: any) => {\r\n    switch (type) {\r\n      case 'required':\r\n        return <ErrorMessage message={'Nazwa jest wymagana'} />\r\n      case 'minLength':\r\n        return <ErrorMessage message={'Nazwa musi zawierać conajmiej 2 znaki'} />\r\n      case 'maxLength':\r\n        return <ErrorMessage message={'Nazwa może zawierać maksymalnie 20 znaków'} />\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  const categoryErrors = (type: any) => {\r\n    switch (type) {\r\n      case 'required':\r\n        return <ErrorMessage message={'Kategoria jest wymagana'} />\r\n      case 'minLength':\r\n        return <ErrorMessage message={'Kategoria musi zawierać conajmiej 2 znaki'} />\r\n      case 'maxLength':\r\n        return <ErrorMessage message={'Kategoria może zawierać maksymalnie 20 znaków'} />\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  const quantityErrors = (type: any) => {\r\n    switch (type) {\r\n      case 'required':\r\n        return <ErrorMessage message={'Stan jest wymagany'} />\r\n      case 'pattern':\r\n        return <ErrorMessage message={'Stan jest niepoprawny'} />\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  const priceErrors = (type: any) => {\r\n    switch (type) {\r\n      case 'required':\r\n        return <ErrorMessage message={'Hasło jest wymagane'} />\r\n      case 'pattern':\r\n        return <ErrorMessage message={'Hasło musi zawierać: co najmniej 8 znaków, 1 cyfrę, 1 małą literę i 1 wielką literę'} />\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.productForm}>\r\n      <h2>{formTitle}</h2>\r\n      <form onSubmit={handleSubmit(handleSubmitForm)}>\r\n        <div className={styles.message}>\r\n          {message}\r\n        </div>\r\n        <div className={styles.formContainer}>\r\n          <div className={styles.formGroup}>\r\n            <div className={styles.inputContainer}>\r\n              <label htmlFor=\"name\">Nazwa</label>\r\n              <Input\r\n                id={'name'}\r\n                placeholder={'Nazwa'}\r\n                label={'Nazwa'}\r\n                type=\"text\"\r\n                defaultValue={defaultName}\r\n                error={errors.name}\r\n                {...register(\"name\", { ...validation.name })}\r\n              />\r\n              {nameErrors(errors.name?.type)}\r\n            </div>\r\n            <div className={styles.inputContainer}>\r\n              <label htmlFor=\"quantity\">Stan</label>\r\n              <Input\r\n                id={'quantity'}\r\n                placeholder={'Stan'}\r\n                label={'Stan'}\r\n                type=\"number\"\r\n                defaultValue={defaultQuantity}\r\n                minValue={0}\r\n                error={errors.quantity}\r\n                {...register(\"quantity\", { ...validation.quantity })}\r\n              />\r\n              {quantityErrors(errors.quantity?.type)}\r\n            </div>\r\n            <div className={styles.inputContainer}>\r\n              <label htmlFor=\"price\">Cena</label>\r\n              <Input\r\n                id={'price'}\r\n                placeholder={'Cena'}\r\n                label={'Cena'}\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                defaultValue={defaultPrice}\r\n                minValue={0}\r\n                error={errors.price}\r\n                {...register(\"price\", { ...validation.price })}\r\n              />\r\n              {priceErrors(errors.price?.type)}\r\n            </div>\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <div className={styles.inputContainer}>\r\n              <label htmlFor=\"unit\">Jednostka</label>\r\n              <select {...register('unit')} className={styles.select} defaultValue={defaultUnit}>\r\n                <option value=\"szt\">szt</option>\r\n                <option value=\"m2\">m2</option>\r\n                <option value=\"mb\">mb</option>\r\n                <option value=\"ark\">ark</option>\r\n                <option value=\"ryz\">ryz</option>\r\n                <option value=\"litry\">litry</option>\r\n                <option value=\"inne\">inne</option>\r\n              </select>\r\n            </div>\r\n            <div className={styles.inputContainer}>\r\n              <div className={styles.selectGroup}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={categorySwitch}\r\n                  onChange={() => setCategorySwitch(categorySwitch => !categorySwitch)} />\r\n                <label htmlFor=\"category\">Dodaj nową kategorię</label>\r\n              </div>\r\n              <Input\r\n                id={'category'}\r\n                placeholder={'Dodaj kategorię'}\r\n                label={'Kategoria'}\r\n                type=\"text\"\r\n                defaultValue={defaultCategory}\r\n                error={errors.category}\r\n                disabled={!categorySwitch}\r\n                {...register(\"category\", { ...validation.category })}\r\n              />\r\n              {categoryErrors(errors.category?.type)}\r\n            </div>\r\n            <div className={styles.inputContainer}>\r\n              <div className={styles.selectGroup}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!categorySwitch}\r\n                  onChange={() => setCategorySwitch(categorySwitch => !categorySwitch)} />\r\n                <label htmlFor=\"category\">Wybierz kategorię</label>\r\n              </div>\r\n              {\r\n                categoryList ? (\r\n                  <select\r\n                    {...(!categorySwitch && { ...register('category') })}\r\n                    className={styles.select}\r\n                    disabled={categorySwitch}\r\n                    defaultValue={defaultCategory}>\r\n                    {\r\n                      Object.entries(categoryList).map(([category]) => (\r\n                        <option key={category} value={category}>{category}</option>\r\n                      ))\r\n                    }\r\n                  </select>\r\n                ) : null\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.actionForm}>\r\n          <Button\r\n            title={'Zapisz'}\r\n            type={'submit'}\r\n            style={{ width: '100%', padding: '0.8rem' }} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductForm","import React, { useState } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport Popup from 'components/common/Popup/Popup'\r\nimport TaskButton from 'components/common/TaskButton/TaskButton'\r\nimport { ReduceReturnType } from '../Storage'\r\nimport { GoPlus } from 'react-icons/go'\r\nimport { BsFilter } from 'react-icons/bs'\r\n\r\ninterface HeaderProps {\r\n  addNewProduct: () => void\r\n  categories: ReduceReturnType | undefined\r\n  handleFilterCategory: (value: string) => void\r\n  activeCategory: string\r\n  allCategoryValue: string\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({\r\n  categories,\r\n  allCategoryValue,\r\n  activeCategory,\r\n  addNewProduct,\r\n  handleFilterCategory\r\n}) => {\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false)\r\n\r\n  return (\r\n    <div className={styles.controls}>\r\n      <TaskButton\r\n        icon={<GoPlus style={{ color: 'grey', fontSize: '1.2rem' }} />}\r\n        name={'Dodaj produkt'}\r\n        onClick={addNewProduct}\r\n        style={{ width: '200px' }}\r\n      />\r\n      <div className={styles.filtersWrapper}>\r\n        <div className={styles.categoryName}><h3>{activeCategory}</h3></div>\r\n        <div className={styles.filterBtn}>\r\n          <TaskButton\r\n            icon={<BsFilter style={{ color: 'grey', fontSize: '1.2rem' }} />}\r\n            name={'Filtruj'}\r\n            onClick={() => setIsPopupOpen(true)}\r\n            style={{ width: '200px' }}\r\n          />\r\n        </div>\r\n        <Popup\r\n          title={'Filtruj kategorie'}\r\n          trigger={isPopupOpen}\r\n          closePopup={() => setIsPopupOpen(false)}\r\n          top={'10px'}\r\n          right={'10px'}\r\n        >\r\n          <>\r\n            <TaskButton\r\n              onClick={() => handleFilterCategory(allCategoryValue)}\r\n              name={allCategoryValue}\r\n              style={{ margin: '8px 0' }}\r\n            />\r\n            {\r\n              categories ? Object.entries(categories).map(([key]) => (\r\n                <div key={key} className={styles.popupContent}>\r\n                  <TaskButton\r\n                    onClick={() => handleFilterCategory(key)}\r\n                    name={key}\r\n                    style={{ margin: '8px 0' }}\r\n                  />\r\n                </div>\r\n              )) : null\r\n            }\r\n          </>\r\n        </Popup>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useCallback, useState } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { Product as ProductModel } from 'models/product';\r\nimport { TiArrowSortedDown } from 'react-icons/ti'\r\nimport { TiArrowSortedUp } from 'react-icons/ti'\r\nimport { TiArrowUnsorted } from 'react-icons/ti'\r\n\r\ninterface ProductsListProps {\r\n  data: ProductModel[] | undefined\r\n  sortProducts: (value: ProductModel[]) => void\r\n}\r\n\r\ntype SortKeys = keyof ProductModel;\r\n\r\nconst ProductsList: React.FC<ProductsListProps> = ({ data, children, sortProducts }) => {\r\n  const asc = 'ascending'\r\n  const dsc = 'descending'\r\n  const [order, setOrder] = useState(asc)\r\n  const [sortKey, setSortKey] = useState('');\r\n\r\n  const headers: { key: SortKeys; label: string, sortable: boolean }[] = [\r\n    { key: \"name\", label: \"Nazwa\", sortable: true },\r\n    { key: \"category\", label: \"Kategoria\", sortable: true },\r\n    { key: \"quantity\", label: \"Stan\", sortable: true },\r\n    { key: \"unit\", label: \"Jedn.\", sortable: false },\r\n    { key: \"price\", label: \"Cena\", sortable: true },\r\n    { key: \"actions\", label: \"Akcje\", sortable: false },\r\n  ];\r\n\r\n  const sortData = useCallback(({ sortBy }: { sortBy: SortKeys }) => {\r\n    if (!data) return;\r\n    const array: ProductModel[] = [...data]\r\n\r\n    if (order === asc) {\r\n      const sorted = array.sort((a, b) => a[sortBy]\r\n        .toString()\r\n        .localeCompare(b[sortBy]\r\n          .toString(), \"pl\", { numeric: true })\r\n      )\r\n      sortProducts(sorted)\r\n      setOrder(dsc)\r\n    }\r\n\r\n    if (order === dsc) {\r\n      const sorted = array.sort((a, b) => b[sortBy]\r\n        .toString()\r\n        .localeCompare(a[sortBy]\r\n          .toString(), \"pl\", { numeric: true })\r\n      )\r\n      sortProducts(sorted)\r\n      setOrder(asc)\r\n    }\r\n\r\n    setSortKey(sortBy);\r\n\r\n  }, [data, order, sortKey])\r\n\r\n  return (\r\n    <div className={styles.productsList}>\r\n      <div className={styles.head}>\r\n        {headers.map(row => (\r\n          <div\r\n            key={row.key}\r\n            className={`${styles.block} ${row.sortable ? styles.sortable : ''}`}\r\n            {...(row.sortable && { onClick: () => sortData({ sortBy: row.key }) })}>\r\n            <span>\r\n              {row.label}\r\n              {row.sortable ? (\r\n                sortKey === row.key ? (\r\n                  order === dsc ? <TiArrowSortedDown /> : <TiArrowSortedUp />\r\n                ) : <TiArrowUnsorted color='#d4d4df' />\r\n              ) : null}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductsList","import React, { useState } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { Product as ProductModel } from 'models/product';\r\nimport IconButton from 'components/common/IconButton/IconButton';\r\nimport Popup from 'components/common/Popup/Popup';\r\nimport TaskButton from 'components/common/TaskButton/TaskButton';\r\nimport { BiDotsVerticalRounded } from 'react-icons/bi'\r\n\r\ninterface ProductProps extends ProductModel {\r\n  deleteProd: () => void\r\n  editProd: () => void\r\n}\r\n\r\nconst Product: React.FC<ProductProps> = ({\r\n  name,\r\n  category,\r\n  quantity,\r\n  unit,\r\n  price,\r\n  editProd,\r\n  deleteProd\r\n}) => {\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false)\r\n  const quantityColor = quantity === 0 ? 'red' : 'initial'\r\n\r\n  return (\r\n    <div className={styles.product} style={{ color: quantityColor }}>\r\n      <div className={`${styles.block}`}><span>{name}</span></div>\r\n      <div className={`${styles.block}`}><span>{category}</span></div>\r\n      <div className={`${styles.block}`}><span>{quantity}</span></div>\r\n      <div className={`${styles.block}`}><span>{unit}</span></div>\r\n      <div className={`${styles.block}`}><span>{price} zł</span></div>\r\n      <div className={`${styles.block}`}>\r\n        <IconButton\r\n          onClick={() => setIsPopupOpen(true)}>\r\n          <BiDotsVerticalRounded style={{ fontSize: '1.2rem', color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <Popup\r\n        title={'Akcje produktu'}\r\n        trigger={isPopupOpen}\r\n        closePopup={() => setIsPopupOpen(false)}\r\n        top={'10px'}\r\n        right={'10px'}\r\n      >\r\n        <div className={styles.popupContent}>\r\n          <TaskButton\r\n            onClick={editProd}\r\n            name={'Etytuj'}\r\n            style={{ margin: '10px 0' }}\r\n          />\r\n          <TaskButton\r\n            onClick={deleteProd}\r\n            name={'Usuń'}\r\n          />\r\n        </div>\r\n      </Popup>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Product","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { BiCategory } from 'react-icons/bi'\r\nimport { ReduceReturnType } from '../Storage'\r\ninterface CategoriesListProps {\r\n  data: ReduceReturnType | undefined\r\n}\r\n\r\nconst CategoriesList: React.FC<CategoriesListProps> = ({ data }) => {\r\n  return (\r\n    <div className={styles.categoriesList}>\r\n      <div className={styles.titleWrapper}>\r\n        <BiCategory fontSize={'1.5rem'} />\r\n        <h4>Magazyn</h4>\r\n      </div>\r\n      <div className={styles.listWrapper}>\r\n        {\r\n          data ? Object.entries(data).map(([name, quantity]) => (\r\n            <div key={name} className={styles.box}>\r\n              <h5>{name}</h5>\r\n              <span>{`ilość: ${quantity}`}</span>\r\n            </div>\r\n          )) : null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoriesList","import React, { useState, useEffect } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport {\r\n  useDeleteProductMutation,\r\n  useAddProductMutation,\r\n  useUpdateProductMutation\r\n} from \"store/api/products\"\r\nimport { Product as ProductModel } from 'models/product'\r\nimport Modal from 'components/common/Modal/Modal'\r\nimport ProductForm from './ProductForm/ProductForm'\r\nimport Controls from './Controls/Controls'\r\nimport ProductsList from './ProductsList/ProductsList'\r\nimport Product from './Product/Product'\r\nimport CategoriesList from './CategoriesList/CategoriesList'\r\nimport SuccessMessage from 'components/common/Messages/SuccessMessage'\r\n\r\nexport type ReduceReturnType = Record<string, number>;\r\n\r\ninterface StorageProps {\r\n  data: ProductModel[] | undefined\r\n}\r\n\r\nconst Storage: React.FC<StorageProps> = ({ data }) => {\r\n  const [deleteProduct] = useDeleteProductMutation()\r\n  const [addProduct] = useAddProductMutation()\r\n  const [updateProduct] = useUpdateProductMutation()\r\n\r\n  const [products, setProducts] = useState<ProductModel[]>()\r\n  const [categories, setCategories] = useState<ReduceReturnType | undefined>()\r\n  const [currentProduct, setCurrentProduct] = useState<any>(null)\r\n  const [isModalOpen, setIsModalOpen] = useState(false)\r\n  const [isModalEditOpen, setIsModalEditOpen] = useState(false)\r\n  const [isSuccess, setIsSuccess] = useState(false)\r\n  const allCategoryValue = 'Wszystkie kategorie'\r\n  const [activeCategory, setActiveCategory] = useState<string>(allCategoryValue)\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setProducts(data)\r\n      setCategories(getCategories(data))\r\n    }\r\n  }, [data])\r\n\r\n  useEffect(() => {\r\n    const formStatus = setTimeout(() => setIsSuccess(false), 1000)\r\n    return () => {\r\n      clearTimeout(formStatus)\r\n    }\r\n  }, [isModalOpen, isModalEditOpen, products])\r\n\r\n  const getCategories = (data: ProductModel[] | undefined) => {\r\n    if (!data) return\r\n    const categories = [...data].map(product => product.category)\r\n    const categoryObj = categories.reduce<ReduceReturnType>((acc, value) => ({\r\n      ...acc,\r\n      [value]: (acc[value] || 0) + 1\r\n    }), {});\r\n    return categoryObj\r\n  }\r\n\r\n  const handleFilterCategory = (value: string) => {\r\n    if (!data) return\r\n    const filterProducts = [...data].filter(product => product.category === value)\r\n    if (value !== allCategoryValue) {\r\n      setProducts(filterProducts)\r\n    }\r\n    else {\r\n      setProducts(data)\r\n    }\r\n    setActiveCategory(value)\r\n  }\r\n\r\n  const handleOpenEditProduct = (prod: ProductModel) => {\r\n    setIsModalEditOpen(true)\r\n    setCurrentProduct(prod)\r\n  }\r\n\r\n  const handleAddProduct = (data: ProductModel) => {\r\n    const { name, category, quantity, unit, price } = data\r\n    addProduct({\r\n      name,\r\n      category,\r\n      quantity,\r\n      unit,\r\n      price\r\n    })\r\n    setIsSuccess(true)\r\n  }\r\n\r\n  const handleEditProduct = (data: ProductModel) => {\r\n    const { name, category, quantity, unit, price } = data\r\n    updateProduct({\r\n      _id: currentProduct._id,\r\n      name,\r\n      category,\r\n      quantity,\r\n      unit,\r\n      price\r\n    })\r\n    setIsSuccess(true)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.storage}>\r\n      <div className={styles.content}>\r\n        <div className={styles.top}>\r\n          <CategoriesList data={categories} />\r\n        </div>\r\n        <div className={styles.bottom}>\r\n          <Controls\r\n            addNewProduct={() => setIsModalOpen(true)}\r\n            categories={categories}\r\n            handleFilterCategory={handleFilterCategory}\r\n            activeCategory={activeCategory}\r\n            allCategoryValue={allCategoryValue}\r\n          />\r\n          {\r\n            <ProductsList\r\n              data={products}\r\n              sortProducts={setProducts}\r\n            >\r\n              {\r\n                products?.slice(0).reverse().map(product => (\r\n                  <Product\r\n                    key={product._id}\r\n                    _id={product._id}\r\n                    name={product.name}\r\n                    category={product.category}\r\n                    quantity={product.quantity}\r\n                    unit={product.unit}\r\n                    price={product.price}\r\n                    editProd={() => handleOpenEditProduct(product)}\r\n                    deleteProd={() => {\r\n                      const result = window.confirm(\"Usunąć produkt?\")\r\n                      if (!result) return\r\n                      deleteProduct(product._id)\r\n                    }}\r\n                  />\r\n                ))\r\n              }\r\n            </ProductsList>\r\n          }\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        trigger={isModalOpen}\r\n        closeModal={() => setIsModalOpen(false)}>\r\n        <ProductForm\r\n          categoryList={categories}\r\n          formTitle={'Dodaj produkt'}\r\n          handleSubmitForm={handleAddProduct}\r\n          message={(isSuccess ? (\r\n            <SuccessMessage message={'Produkt został dodany'} />) : null)}\r\n        />\r\n      </Modal>\r\n      <Modal\r\n        trigger={isModalEditOpen}\r\n        closeModal={() => setIsModalEditOpen(false)}>\r\n        {\r\n          currentProduct && (\r\n            <ProductForm\r\n              formTitle={'Edytuj produkt'}\r\n              categoryList={categories}\r\n              defaultName={currentProduct.name}\r\n              defaultCategory={currentProduct.category}\r\n              defaultQuantity={currentProduct.quantity}\r\n              defaultUnit={currentProduct.unit}\r\n              defaultPrice={currentProduct.price}\r\n              handleSubmitForm={handleEditProduct}\r\n              message={(isSuccess ? (\r\n                <SuccessMessage message={'Produkt został zmieniony'} />) : null)}\r\n            />\r\n          )\r\n        }\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Storage","import React from 'react'\r\nimport { useGetAllProductsQuery } from \"store/api/products\"\r\nimport Storage from 'components/Storage/Storage'\r\nimport ErrorMessage from 'components/common/Messages/ErrorMessage'\r\n\r\nconst StoragePage: React.FC = () => {\r\n  const { data, error, isLoading } = useGetAllProductsQuery()\r\n\r\n  return (\r\n    <>\r\n      {\r\n        error && (<ErrorMessage message={'Wystąpił błąd serwera, nie można wyświetlić zawartości'} />)\r\n      }\r\n      {\r\n        isLoading ? <div>Loading...</div> : <Storage data={data} />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StoragePage\r\n","import React from 'react'\r\n\r\nconst Calculator: React.FC = () => {\r\n  return (\r\n    <div style={{ padding: '4rem' }}><h2>Is in progress...</h2></div>\r\n  )\r\n}\r\n\r\nexport default Calculator","import React from 'react'\r\n\r\nconst View3: React.FC = () => {\r\n\r\n  return (\r\n    <div style={{ padding: '4rem' }}><h2>Is in progress...</h2></div>\r\n  )\r\n}\r\n\r\nexport default View3\r\n","import React from 'react'\r\n\r\nconst Settings: React.FC = () => {\r\n\r\n  return (\r\n    <div style={{ padding: '4rem' }}><h2>Is in progress...</h2></div>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import React from 'react';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport { useAuth } from 'hooks/useAuth'\r\nimport Layout from 'components/Layout';\r\nimport SignIn from 'components/Auth/SignIn/SignIn';\r\nimport SignUp from 'components/Auth/SignUp/SignUp';\r\nimport Tasks from 'pages/TasksPage';\r\nimport Storage from 'pages/StoragePage';\r\nimport Calculator from 'pages/CalculatorPage';\r\nimport Statistics from 'pages/StatisticsPage';\r\nimport Settings from 'pages/SettingsPage';\r\n\r\nconst App: React.FC = () => {\r\n  const { user } = useAuth()\r\n\r\n  return (\r\n    <>\r\n      <Routes>\r\n        {user ? (\r\n          <Route element={<Layout />} >\r\n            <Route path=\"/zadania\" element={<Tasks />} />\r\n            <Route path='/magazyn' element={<Storage />} />\r\n            <Route path='/kalkulator' element={<Calculator />} />\r\n            <Route path='/statystyki' element={<Statistics />} />\r\n            <Route path='/ustawienia' element={<Settings />} />\r\n            <Route path=\"/*\" element={<Navigate replace to=\"/zadania\" />} />\r\n          </Route>\r\n        ) : (\r\n          <>\r\n            <Route path='/logowanie' element={<SignIn />} />\r\n            <Route path='/rejestracja' element={<SignUp />} />\r\n            <Route path='/*' element={<Navigate replace to='/logowanie' />} />\r\n          </>\r\n        )}\r\n      </Routes>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'assets/styles/base.scss';\r\nimport AppProviders from './providers/AppProviders';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProviders>\r\n      <App />\r\n    </AppProviders>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"styles_nav__2JNfC\",\"navHidden\":\"styles_navHidden__oQyUu\",\"switchButton\":\"styles_switchButton__2FMq5\",\"switchButtonHidden\":\"styles_switchButtonHidden__WrAtf\",\"linksContainer\":\"styles_linksContainer__13Tdb\",\"navItem\":\"styles_navItem__1XbL9\",\"navLink\":\"styles_navLink__1DFB4\",\"icon\":\"styles_icon__d5IPB\",\"active\":\"styles_active__1qHPd\",\"divider\":\"styles_divider__1FaYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__3YPWK\",\"cardCover\":\"styles_cardCover__3tjcd\",\"cardDetails\":\"styles_cardDetails__3OCtK\",\"labelsContainer\":\"styles_labelsContainer__IdiPL\",\"cardLabel\":\"styles_cardLabel__3x_F_\",\"iconsContainer\":\"styles_iconsContainer__3B_Ww\",\"dateBtn\":\"styles_dateBtn__2m4qV\",\"icon\":\"styles_icon__N6Uwv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__2LlJK\",\"header\":\"styles_header__1Z26C\",\"titleWrapper\":\"styles_titleWrapper__1ijmQ\",\"textarea\":\"styles_textarea__3ZfMb\",\"popupContent\":\"styles_popupContent__1l07L\",\"cardsContainer\":\"styles_cardsContainer__10L28\",\"listForm\":\"styles_listForm__Zoo9s\",\"divider\":\"styles_divider__3Z9MO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__1Q7lS\",\"validateWrapper\":\"styles_validateWrapper__2SnbK\",\"success\":\"styles_success__2OtKq\",\"error\":\"styles_error__1QR-F\",\"validate\":\"styles_validate__2zM6k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product\":\"styles_product__1uNpm\",\"block\":\"styles_block__LpmRW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"styles_auth__2XZIN\",\"formContainer\":\"styles_formContainer__36swo\",\"form\":\"styles_form__3ypda\",\"left\":\"styles_left__3JtDN\",\"right\":\"styles_right__2Hn8I\",\"whiteBtn\":\"styles_whiteBtn__dnq7_\",\"blueBtn\":\"styles_blueBtn__1ISzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"styles_auth__9CGTo\",\"formContainer\":\"styles_formContainer__1ei0n\",\"form\":\"styles_form__1AjUC\",\"left\":\"styles_left__2ismh\",\"right\":\"styles_right__38iqU\",\"whiteBtn\":\"styles_whiteBtn__12_EK\",\"blueBtn\":\"styles_blueBtn__1uSPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelForm\":\"styles_labelForm__3KGM8\",\"textarea\":\"styles_textarea__2r6P0\",\"colorsPalette\":\"styles_colorsPalette__3apxz\",\"pickerSwatches\":\"styles_pickerSwatches__wJbKY\",\"pickerSwatch\":\"styles_pickerSwatch__1dStS\",\"buttonsWrapper\":\"styles_buttonsWrapper__bZrAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__1HOhW\",\"logoContainer\":\"styles_logoContainer__1IZjk\",\"userInfo\":\"styles_userInfo__1vJnt\",\"userSignature\":\"styles_userSignature__JuTHm\",\"userActionBtn\":\"styles_userActionBtn__8x7YL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardWindow\":\"styles_cardWindow__3fDol\",\"cardWindowWrapper\":\"styles_cardWindowWrapper__ujQKY\",\"cardWindowContent\":\"styles_cardWindowContent__2nja3\",\"cardWindowSidebar\":\"styles_cardWindowSidebar__2iyMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"attachment\":\"styles_attachment__25vof\",\"fileImg\":\"styles_fileImg__19LL-\",\"checkboxWrapper\":\"styles_checkboxWrapper__2p69j\",\"detailsContainer\":\"styles_detailsContainer__XlN-T\",\"buttonsWrapper\":\"styles_buttonsWrapper__rADL9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"materialsFormContainer\":\"styles_materialsFormContainer__1FUX-\",\"materialsForm\":\"styles_materialsForm__ffzAe\",\"selectContainer\":\"styles_selectContainer__24Q14\",\"materialsList\":\"styles_materialsList__PNqMm\",\"formGroup\":\"styles_formGroup__1oQch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"styles_controls__e15vX\",\"filtersWrapper\":\"styles_filtersWrapper__1TskM\",\"filterBtn\":\"styles_filterBtn__8l8TC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"styles_layout__26wyt\",\"header\":\"styles_header__15M0d\",\"navigation\":\"styles_navigation__2OA_s\",\"pages\":\"styles_pages__TSa_W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"styles_board__1LcUD\",\"listContainer\":\"styles_listContainer__20KZG\",\"formContainer\":\"styles_formContainer__1Jcra\",\"addListForm\":\"styles_addListForm__1LlSd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationSpan\":\"styles_notificationSpan__3JSzF\",\"selectedDateBtn\":\"styles_selectedDateBtn__zGtuM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"attachmentForm\":\"styles_attachmentForm__35dsn\",\"inputContainer\":\"styles_inputContainer__Cd2DZ\",\"listContainer\":\"styles_listContainer__2amd4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"storage\":\"styles_storage__22qJ3\",\"content\":\"styles_content__19sg_\",\"top\":\"styles_top__2KYAn\",\"bottom\":\"styles_bottom__17AQS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productsList\":\"styles_productsList__3Fp0Y\",\"head\":\"styles_head__egO-Y\",\"block\":\"styles_block__36pkB\",\"sortable\":\"styles_sortable__1-zpP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categoriesList\":\"styles_categoriesList__3sWDt\",\"titleWrapper\":\"styles_titleWrapper__32XOY\",\"listWrapper\":\"styles_listWrapper__1XscU\",\"box\":\"styles_box__3y_wB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"styles_popup__1Jc4w\",\"header\":\"styles_header__3ANqf\",\"popupContent\":\"styles_popupContent__3P6hY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"styles_box__1PsiF\",\"wrapper\":\"styles_wrapper__3es70\",\"clickableArea\":\"styles_clickableArea__mdMjk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"styles_overlay__LtLkb\",\"modal\":\"styles_modal__1hzmg\",\"header\":\"styles_header__Khp8x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardTitle\":\"styles_cardTitle__1bZzV\",\"cardTitleContainer\":\"styles_cardTitleContainer__2yuVm\",\"cardTitleTextarea\":\"styles_cardTitleTextarea__Aq5si\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__2Bdul\",\"textarea\":\"styles_textarea__386pv\",\"buttonsWrapper\":\"styles_buttonsWrapper__1a-TD\"};"],"sourceRoot":""}